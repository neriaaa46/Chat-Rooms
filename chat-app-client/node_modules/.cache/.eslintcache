[{"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\index.js":"1","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\reportWebVitals.js":"2","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\index.js":"3","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Redux\\store.js":"4","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\AuthContext.js":"5","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Register.js":"6","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\HomePage.js":"7","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Login.js":"8","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Bar.js":"9","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js":"10","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Initialization.js":"11","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Rooms.js":"12","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\ResetPassword.js":"13","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\CreateRoom.js":"14","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Room.js":"15","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js":"16","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\DAL\\roomsApi.js":"17","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Loader.js":"18","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\CardRoom.js":"19","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Utils\\validation.js":"20","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Utils\\function.js":"21","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\index.js":"22","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\reportWebVitals.js":"23","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Redux\\store.js":"24","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\AuthContext.js":"25","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\index.js":"26","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\HomePage.js":"27","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Register.js":"28","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Login.js":"29","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Bar.js":"30","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js":"31","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Initialization.js":"32","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js":"33","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Rooms.js":"34","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\CreateRoom.js":"35","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Room.js":"36","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\ResetPassword.js":"37","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Loader.js":"38","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\DAL\\roomsApi.js":"39","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\CardRoom.js":"40","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Utils\\function.js":"41","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Utils\\validation.js":"42"},{"size":893,"mtime":1634108527835,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":2201,"mtime":1637936922759,"results":"46","hashOfConfig":"44"},{"size":646,"mtime":1634107501868,"results":"47","hashOfConfig":"44"},{"size":1230,"mtime":1634228636307,"results":"48","hashOfConfig":"44"},{"size":5611,"mtime":1637747354123,"results":"49","hashOfConfig":"44"},{"size":565,"mtime":1636025223211,"results":"50","hashOfConfig":"44"},{"size":4316,"mtime":1637747337237,"results":"51","hashOfConfig":"44"},{"size":1851,"mtime":1637150957171,"results":"52","hashOfConfig":"44"},{"size":2683,"mtime":1637747265434,"results":"53","hashOfConfig":"44"},{"size":1002,"mtime":1634228636309,"results":"54","hashOfConfig":"44"},{"size":2336,"mtime":1638008570535,"results":"55","hashOfConfig":"44"},{"size":3875,"mtime":1637747317469,"results":"56","hashOfConfig":"44"},{"size":2851,"mtime":1636031917339,"results":"57","hashOfConfig":"44"},{"size":7687,"mtime":1637344468621,"results":"58","hashOfConfig":"44"},{"size":1909,"mtime":1638034442062,"results":"59","hashOfConfig":"44"},{"size":1165,"mtime":1638034446643,"results":"60","hashOfConfig":"44"},{"size":301,"mtime":1632323832906,"results":"61","hashOfConfig":"44"},{"size":488,"mtime":1636031491731,"results":"62","hashOfConfig":"44"},{"size":3228,"mtime":1637175777351,"results":"63","hashOfConfig":"44"},{"size":398,"mtime":1637148101494,"results":"64","hashOfConfig":"44"},{"size":893,"mtime":1634108527835,"results":"65","hashOfConfig":"66"},{"size":362,"mtime":499162500000,"results":"67","hashOfConfig":"66"},{"size":646,"mtime":1634107501868,"results":"68","hashOfConfig":"66"},{"size":1230,"mtime":1634228636307,"results":"69","hashOfConfig":"66"},{"size":2201,"mtime":1637936922759,"results":"70","hashOfConfig":"66"},{"size":565,"mtime":1636025223211,"results":"71","hashOfConfig":"66"},{"size":5611,"mtime":1637747354123,"results":"72","hashOfConfig":"66"},{"size":4316,"mtime":1637747337237,"results":"73","hashOfConfig":"66"},{"size":1851,"mtime":1637150957171,"results":"74","hashOfConfig":"66"},{"size":2683,"mtime":1637747265434,"results":"75","hashOfConfig":"66"},{"size":1002,"mtime":1634228636309,"results":"76","hashOfConfig":"66"},{"size":1972,"mtime":1638055530135,"results":"77","hashOfConfig":"66"},{"size":2336,"mtime":1638056563841,"results":"78","hashOfConfig":"66"},{"size":2851,"mtime":1636031917339,"results":"79","hashOfConfig":"66"},{"size":7705,"mtime":1638058456655,"results":"80","hashOfConfig":"66"},{"size":3875,"mtime":1637747317469,"results":"81","hashOfConfig":"66"},{"size":301,"mtime":1632323832906,"results":"82","hashOfConfig":"66"},{"size":1228,"mtime":1638055536328,"results":"83","hashOfConfig":"66"},{"size":488,"mtime":1636031491731,"results":"84","hashOfConfig":"66"},{"size":398,"mtime":1637148101494,"results":"85","hashOfConfig":"66"},{"size":3228,"mtime":1637175777351,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17jpteo",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6akzgw",{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\index.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\reportWebVitals.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\index.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Redux\\store.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\AuthContext.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Register.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\HomePage.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Login.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Bar.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Initialization.js",["175"],"import {useEffect, useContext} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {AuthContext} from '../Components/AuthContext'\r\nimport Loader from \"./Loader\"\r\nimport {updateTokens} from \"../DAL/authenticationApi\"\r\n\r\n\r\nfunction Initialization(){\r\n\r\n    const ctx = useContext(AuthContext)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const login = () => {\r\n        dispatch({type: 'LOGIN'})\r\n    }\r\n\r\n    const logout = () => {\r\n        dispatch({type: 'LOGOUT'})\r\n    }\r\n\r\n    const start = () => {\r\n        dispatch({type: 'START'})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            const {accessToken} = await updateTokens()\r\n            if(accessToken) {\r\n                login()\r\n                ctx.refreshToken(accessToken)\r\n            } else {\r\n                logout()\r\n            }\r\n            setTimeout(()=>{\r\n                start()\r\n            }, 350)\r\n        })()\r\n    },[])\r\n\r\n    return <>\r\n        <Loader/>\r\n    </>\r\n}\r\n\r\nexport default Initialization","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Rooms.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\ResetPassword.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\CreateRoom.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Room.js",["176","177","178","179","180","181","182","183"],"import { useEffect, useState, useRef } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row} from \"react-bootstrap\"\r\nimport InfiniteScrollReverse from \"react-infinite-scroll-reverse\"\r\nimport {getMessges, getUsers, changeMessagesViewed} from \"../DAL/roomsApi\"\r\nimport {BiMessageDetail} from \"react-icons/bi\"\r\nimport {FaUsers} from \"react-icons/fa\"\r\nimport {BsCheck} from \"react-icons/bs\"\r\n\r\n\r\nlet socket \r\nlet morePagination = true\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const messagesEndRef = useRef()\r\n    const {id, userName} = decodeJwtToken()\r\n    const {state} = useLocation()\r\n\r\n    const [room, setRoom] = useState(state) // id, roomName, admin\r\n    const [name, setName] = useState(userName) // userName\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [usersRoom, setUsersRoom] = useState([])\r\n    const [bottom, setBottom] = useState(true)\r\n    const [message, setMessage] = useState('') \r\n    const [messages, setMessages] = useState([])\r\n\r\n\r\n\r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current?.scrollIntoView({})\r\n    }\r\n\r\n    useEffect(()=>{scrollToBottom()}, [bottom])\r\n  \r\n    useEffect(()=>{\r\n        getListUsers()\r\n        getMoreMessages(1)\r\n    }, [])\r\n\r\n   \r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection', {name, room}, ()=>{\r\n            })\r\n\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user === \"\" && message.text === \"\") {  // i joined\r\n                getListUsers()\r\n\r\n            } else if(message.user === \"\" && message.text !== \"\"){ //else user joined or left\r\n                getListUsers()\r\n                setMessages(messages => [ ...messages, message ])\r\n\r\n            } else{\r\n                setMessages(messages => [ ...messages, message ])\r\n                setBottom(prev => !prev) // when get new mesage the scroller go bottom\r\n            }       \r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('changeViewed', ({messagesChanged}) => {\r\n\r\n            const messagesId = messagesChanged.map(message => {\r\n                if(message.userName === name){\r\n                    return message.id\r\n                }\r\n            })\r\n\r\n            setMessages(messages => messages.map(message => {\r\n                if (messagesId.includes(message._id)){\r\n                    return { ...message, view: true }\r\n                } else {\r\n                    return message\r\n                }\r\n            }))\r\n        })\r\n    },[])\r\n\r\n\r\n    function sendMessage(){\r\n        if(message.trim()){\r\n            let view \r\n            usersRoom.length > 1 ? view = true : view = false\r\n            socket.emit('sendMessage', {name, room, message, view}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function getListUsers(){\r\n        const users = await getUsers(room.id) \r\n        setUsersRoom(users)\r\n    }\r\n\r\n    async function getMoreMessages(skip) {\r\n        setIsLoading(true)\r\n        const {lastData, nextMessages} = await getMessges(room.id, skip-1) \r\n\r\n        setTimeout(() => {\r\n            setMessages([...nextMessages, ...messages])\r\n            setIsLoading(false)\r\n            viewedMessages(nextMessages)\r\n        }, 300)\r\n\r\n        if(lastData) {\r\n            morePagination = false\r\n        }\r\n    }\r\n\r\n    function  viewedMessages(nextMessages){\r\n        const messagesChanged = nextMessages.map((message)=>{ \r\n            if(message.user !== name && message.view === false){\r\n                message.view = true \r\n                return {id: message._id, userName: message.user }\r\n            }\r\n        }).filter(message => message !== undefined)\r\n\r\n        if(messagesChanged.length > 0){\r\n\r\n            socket.emit('changeViewedMessages', {room, messagesChanged}, ()=>{\r\n            })\r\n\r\n            changeMessagesViewed(messagesChanged)\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">Chat Room</h4>\r\n                </div>\r\n\r\n\r\n                <div className=\"chat-body\">\r\n                    <div className=\"chat-side-bar\">\r\n                        <div className=\"name-room\">\r\n                            <BiMessageDetail size={25} className=\"icon-msg\"/> <h6>Room Name :</h6>\r\n                        </div>\r\n\r\n                        <div className=\"header-room\">\r\n                            <h4 className=\"text-center\">{room.roomName}</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"name-room mb-2\">\r\n                                <FaUsers size={25} className=\"icon-msg\"/>\r\n                                 <h6>Users :</h6>\r\n                            </div>\r\n                            <div className=\"users-room\">\r\n                                {usersRoom.map((user, index)=> <p key = {index}>{user.userName}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"chat-message-textArea\">\r\n                        <InfiniteScrollReverse\r\n                        className=\"chat-messages\"\r\n                        hasMore={morePagination}\r\n                        isLoading={isLoading}\r\n                        loadMore={getMoreMessages}\r\n                        loadArea={50}\r\n                        >\r\n                            \r\n                            {messages.map((message, index)=>{\r\n                                return  <div key={index} ref = {index === messages.length-1 ? messagesEndRef : null } className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                            <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                                {message.user&&<p className=\"chat-rectangle-name-date my-0 pt-1 pb-0\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <p className=\"chat-rectangle-message\">{message.text}</p>\r\n                                                    {message.user===name&&<BsCheck size = {30} className={`${message.view ? \"icon-v-view\" : \"icon-v-not-view\"} mt-0 mb-0`}/>}                                         \r\n                                                </div>\r\n                                            </span>\r\n                                        </div> \r\n                            })}\r\n                        \r\n                        </InfiniteScrollReverse>\r\n\r\n                        <div className=\"textarea-message\">\r\n                            <textarea className=\"textArea\" rows=\"2\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n                            <button className=\"btn-message\" variant=\"primary\" onClick = {sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\DAL\\roomsApi.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\Loader.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Components\\CardRoom.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Utils\\validation.js",["184","185"],"\r\nfunction validation({value,name},inputsDetails, formType){\r\n\r\n    const newErrors = []\r\n    let inValid = false\r\n    const {validations} = inputsDetails[name]\r\n\r\n    if(name===\"userName\" || name === \"email\" || name===\"roomName\"){\r\n        value = value.trim()\r\n    }\r\n    \r\n    if(validations.required && !value){\r\n      newErrors.push(`נדרש - ${inputsDetails[name].name}`)\r\n      inValid = true\r\n    }\r\n\r\n    if(validations.pattern && !validations.pattern.test(value)){\r\n          newErrors.push(`${inputsDetails[name].name} - ${inputsDetails[name].appropriateError}`)\r\n          inValid = true\r\n    }\r\n\r\n    if(name===\"confirmPassword\" && inputsDetails[\"password\"].value !== value){\r\n        newErrors.push(\"אין התאמה לסיסמא שנבחרה\")\r\n        inValid = true\r\n    }\r\n\r\n\r\n    if((formType === \"register\" || formType === \"resetPassword\") && name === \"password\" && inputsDetails[\"confirmPassword\"].value && inputsDetails[\"confirmPassword\"].value !== value && inputsDetails[\"confirmPassword\"].errors.length === 0){\r\n        inputsDetails[\"confirmPassword\"].errors.push(\"אין התאמה לסיסמא שנבחרה\")\r\n        inputsDetails[\"confirmPassword\"].inValid = true\r\n\r\n    } else if((formType === \"register\" || formType === \"resetPassword\") && name === \"password\" && inputsDetails[\"confirmPassword\"].value && inputsDetails[\"confirmPassword\"].value === value){\r\n        inputsDetails[\"confirmPassword\"].errors = []\r\n        inputsDetails[\"confirmPassword\"].inValid = false\r\n    }\r\n    \r\n    inputsDetails[name].inValid = inValid\r\n    inputsDetails[name].value = value\r\n    inputsDetails[name].errors = newErrors\r\n\r\n   return  {...inputsDetails}\r\n\r\n}\r\n\r\n// validation objects to form\r\n\r\nconst userName = {\r\n    value: '',\r\n    name:\"שם משתמש\",\r\n    inValid:false,\r\n    appropriateError:\"אותיות וספרות בלבד\",\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^[a-zA-Z0-9 \\u0590-\\u05fe]+$/i\r\n    }\r\n}\r\n\r\nconst email = {\r\n    value: '',\r\n    name:\"דואר אלקטרוני\",\r\n    inValid:false,\r\n    appropriateError:\"לא תקין\", \r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/ \r\n    }\r\n} \r\n\r\nconst password = {\r\n    value: '',\r\n    name:\"סיסמא\",\r\n    inValid:false,\r\n    appropriateError:\"לפחות 6 תווים עם אות (אנגלית) וספרה\",\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.{6,})/ \r\n    }\r\n}\r\n\r\nconst confirmPassword = {\r\n    value: '',\r\n    name:\"אימות סיסמא\",\r\n    inValid:false,\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n    }\r\n}\r\n\r\nconst roomName = {\r\n    value: '',\r\n    name:\"שם חדר\",\r\n    inValid:false,\r\n    appropriateError:\"אותיות (אנגלית) וספרות\",\r\n    errors:[], \r\n    validations:{\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9 ]+$/i \r\n    }\r\n}\r\n\r\nconst roomType = {\r\n    value: '',\r\n    name:\"סוג חדר\",\r\n    inValid:false,\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n    }\r\n}\r\n\r\n\r\nexport {validation, userName, email, password, confirmPassword, roomName, roomType}","C:\\Users\\נריה\\Desktop\\chat rooms\\chat-app-client\\src\\chat\\Utils\\function.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\index.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\reportWebVitals.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Redux\\store.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\AuthContext.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\index.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\HomePage.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Register.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Login.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Bar.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Initialization.js",["186"],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Rooms.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\CreateRoom.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Room.js",["187","188","189","190","191","192","193","194"],"import { useEffect, useState, useRef } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row} from \"react-bootstrap\"\r\nimport InfiniteScrollReverse from \"react-infinite-scroll-reverse\"\r\nimport {getMessges, getUsers, changeMessagesViewed} from \"../DAL/roomsApi\"\r\nimport {BiMessageDetail} from \"react-icons/bi\"\r\nimport {FaUsers} from \"react-icons/fa\"\r\nimport {BsCheck} from \"react-icons/bs\"\r\n\r\n\r\nlet socket \r\nlet morePagination = true\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"https://chat-rooms-web.herokuapp.com\"\r\n    const messagesEndRef = useRef()\r\n    const {id, userName} = decodeJwtToken()\r\n    const {state} = useLocation()\r\n\r\n    const [room, setRoom] = useState(state) // id, roomName, admin\r\n    const [name, setName] = useState(userName) // userName\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [usersRoom, setUsersRoom] = useState([])\r\n    const [bottom, setBottom] = useState(true)\r\n    const [message, setMessage] = useState('') \r\n    const [messages, setMessages] = useState([])\r\n\r\n\r\n\r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current?.scrollIntoView({})\r\n    }\r\n\r\n    useEffect(()=>{scrollToBottom()}, [bottom])\r\n  \r\n    useEffect(()=>{\r\n        getListUsers()\r\n        getMoreMessages(1)\r\n    }, [])\r\n\r\n   \r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection', {name, room}, ()=>{\r\n            })\r\n\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user === \"\" && message.text === \"\") {  // i joined\r\n                getListUsers()\r\n\r\n            } else if(message.user === \"\" && message.text !== \"\"){ //else user joined or left\r\n                getListUsers()\r\n                setMessages(messages => [ ...messages, message ])\r\n\r\n            } else{\r\n                setMessages(messages => [ ...messages, message ])\r\n                setBottom(prev => !prev) // when get new mesage the scroller go bottom\r\n            }       \r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('changeViewed', ({messagesChanged}) => {\r\n\r\n            const messagesId = messagesChanged.map(message => {\r\n                if(message.userName === name){\r\n                    return message.id\r\n                }\r\n            })\r\n\r\n            setMessages(messages => messages.map(message => {\r\n                if (messagesId.includes(message._id)){\r\n                    return { ...message, view: true }\r\n                } else {\r\n                    return message\r\n                }\r\n            }))\r\n        })\r\n    },[])\r\n\r\n\r\n    function sendMessage(){\r\n        if(message.trim()){\r\n            let view \r\n            usersRoom.length > 1 ? view = true : view = false\r\n            socket.emit('sendMessage', {name, room, message, view}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function getListUsers(){\r\n        const users = await getUsers(room.id) \r\n        setUsersRoom(users)\r\n    }\r\n\r\n    async function getMoreMessages(skip) {\r\n        setIsLoading(true)\r\n        const {lastData, nextMessages} = await getMessges(room.id, skip-1) \r\n\r\n        setTimeout(() => {\r\n            setMessages([...nextMessages, ...messages])\r\n            setIsLoading(false)\r\n            viewedMessages(nextMessages)\r\n        }, 300)\r\n\r\n        if(lastData) {\r\n            morePagination = false\r\n        }\r\n    }\r\n\r\n    function  viewedMessages(nextMessages){\r\n        const messagesChanged = nextMessages.map((message)=>{ \r\n            if(message.user !== name && message.view === false){\r\n                message.view = true \r\n                return {id: message._id, userName: message.user }\r\n            }\r\n        }).filter(message => message !== undefined)\r\n\r\n        if(messagesChanged.length > 0){\r\n\r\n            socket.emit('changeViewedMessages', {room, messagesChanged}, ()=>{\r\n            })\r\n\r\n            changeMessagesViewed(messagesChanged)\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center chat\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">Chat Room</h4>\r\n                </div>\r\n\r\n                <div className=\"chat-body\">\r\n                    <div className=\"chat-side-bar\">\r\n                        <div className=\"name-room\">\r\n                            <BiMessageDetail size={25} className=\"icon-msg\"/> <h6>Room Name :</h6>\r\n                        </div>\r\n\r\n                        <div className=\"header-room\">\r\n                            <h4 className=\"text-center\">{room.roomName}</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"name-room mb-2\">\r\n                                <FaUsers size={25} className=\"icon-msg\"/>\r\n                                 <h6>Users :</h6>\r\n                            </div>\r\n                            <div className=\"users-room\">\r\n                                {usersRoom.map((user, index)=> <p key = {index}>{user.userName}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"chat-message-textArea\">\r\n                        <InfiniteScrollReverse\r\n                        className=\"chat-messages\"\r\n                        hasMore={morePagination}\r\n                        isLoading={isLoading}\r\n                        loadMore={getMoreMessages}\r\n                        loadArea={50}\r\n                        >\r\n                            \r\n                            {messages.map((message, index)=>{\r\n                                return  <div key={index} ref = {index === messages.length-1 ? messagesEndRef : null } className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                            <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                                {message.user&&<p className=\"chat-rectangle-name-date my-0 pt-1 pb-0\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <p className=\"chat-rectangle-message\">{message.text}</p>\r\n                                                    {message.user===name&&<BsCheck size = {30} className={`${message.view ? \"icon-v-view\" : \"icon-v-not-view\"} mt-0 mb-0`}/>}                                         \r\n                                                </div>\r\n                                            </span>\r\n                                        </div> \r\n                            })}\r\n                        \r\n                        </InfiniteScrollReverse>\r\n\r\n                        <div className=\"textarea-message\">\r\n                            <textarea className=\"textArea\" rows=\"2\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n                            <button className=\"btn-message\" variant=\"primary\" onClick = {sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room","C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\ResetPassword.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\Loader.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\DAL\\roomsApi.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Components\\CardRoom.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Utils\\function.js",[],"C:\\Users\\נריה\\Desktop\\chat rooms new\\chat-app-client\\src\\chat\\Utils\\validation.js",["195","196"],{"ruleId":"197","severity":1,"message":"198","line":39,"column":7,"nodeType":"199","endLine":39,"endColumn":9,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":23,"column":18,"nodeType":"203","messageId":"204","endLine":23,"endColumn":25},{"ruleId":"201","severity":1,"message":"205","line":24,"column":18,"nodeType":"203","messageId":"204","endLine":24,"endColumn":25},{"ruleId":"197","severity":1,"message":"206","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":10,"suggestions":"207"},{"ruleId":"197","severity":1,"message":"208","line":57,"column":8,"nodeType":"199","endLine":57,"endColumn":10,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"210","line":75,"column":8,"nodeType":"199","endLine":75,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":81,"column":60,"nodeType":"214","messageId":"215","endLine":81,"endColumn":62},{"ruleId":"197","severity":1,"message":"216","line":95,"column":7,"nodeType":"199","endLine":95,"endColumn":9,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"213","line":129,"column":59,"nodeType":"214","messageId":"215","endLine":129,"endColumn":61},{"ruleId":"218","severity":1,"message":"219","line":67,"column":25,"nodeType":"220","messageId":"221","endLine":67,"endColumn":26,"suggestions":"222"},{"ruleId":"218","severity":1,"message":"219","line":67,"column":41,"nodeType":"220","messageId":"221","endLine":67,"endColumn":42,"suggestions":"223"},{"ruleId":"197","severity":1,"message":"198","line":39,"column":7,"nodeType":"199","endLine":39,"endColumn":9,"suggestions":"224"},{"ruleId":"201","severity":1,"message":"202","line":23,"column":18,"nodeType":"203","messageId":"204","endLine":23,"endColumn":25},{"ruleId":"201","severity":1,"message":"205","line":24,"column":18,"nodeType":"203","messageId":"204","endLine":24,"endColumn":25},{"ruleId":"197","severity":1,"message":"206","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":10,"suggestions":"225"},{"ruleId":"197","severity":1,"message":"208","line":57,"column":8,"nodeType":"199","endLine":57,"endColumn":10,"suggestions":"226"},{"ruleId":"197","severity":1,"message":"210","line":75,"column":8,"nodeType":"199","endLine":75,"endColumn":10,"suggestions":"227"},{"ruleId":"212","severity":1,"message":"213","line":81,"column":60,"nodeType":"214","messageId":"215","endLine":81,"endColumn":62},{"ruleId":"197","severity":1,"message":"216","line":95,"column":7,"nodeType":"199","endLine":95,"endColumn":9,"suggestions":"228"},{"ruleId":"212","severity":1,"message":"213","line":129,"column":59,"nodeType":"214","messageId":"215","endLine":129,"endColumn":61},{"ruleId":"218","severity":1,"message":"219","line":67,"column":25,"nodeType":"220","messageId":"221","endLine":67,"endColumn":26,"suggestions":"229"},{"ruleId":"218","severity":1,"message":"219","line":67,"column":41,"nodeType":"220","messageId":"221","endLine":67,"endColumn":42,"suggestions":"230"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ctx', 'login', 'logout', and 'start'. Either include them or remove the dependency array.","ArrayExpression",["231"],"no-unused-vars","'setRoom' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getListUsers' and 'getMoreMessages'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'id', 'name', and 'room'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'getListUsers'. Either include it or remove the dependency array.",["234"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["235"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["236","237"],["238","239"],["240"],["241"],["242"],["243"],["244"],["245","246"],["247","248"],{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"desc":"249","fix":"267"},{"desc":"251","fix":"268"},{"desc":"253","fix":"269"},{"desc":"255","fix":"270"},{"desc":"257","fix":"271"},{"messageId":"259","fix":"272","desc":"261"},{"messageId":"262","fix":"273","desc":"264"},{"messageId":"259","fix":"274","desc":"261"},{"messageId":"262","fix":"275","desc":"264"},"Update the dependencies array to be: [ctx, login, logout, start]",{"range":"276","text":"277"},"Update the dependencies array to be: [getListUsers, getMoreMessages]",{"range":"278","text":"279"},"Update the dependencies array to be: [id, name, room]",{"range":"280","text":"281"},"Update the dependencies array to be: [getListUsers]",{"range":"282","text":"283"},"Update the dependencies array to be: [name]",{"range":"284","text":"285"},"removeEscape",{"range":"286","text":"287"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"288","text":"289"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"290","text":"287"},{"range":"291","text":"289"},{"range":"292","text":"277"},{"range":"293","text":"279"},{"range":"294","text":"281"},{"range":"295","text":"283"},{"range":"296","text":"285"},{"range":"297","text":"287"},{"range":"298","text":"289"},{"range":"299","text":"287"},{"range":"300","text":"289"},[918,920],"[ctx, login, logout, start]",[1349,1351],"[getListUsers, getMoreMessages]",[1628,1630],"[id, name, room]",[2231,2233],"[getListUsers]",[2804,2806],"[name]",[2117,2118],"",[2117,2117],"\\",[2133,2134],[2133,2133],[918,920],[1371,1373],[1650,1652],[2253,2255],[2826,2828],[2117,2118],[2117,2117],[2133,2134],[2133,2133]]