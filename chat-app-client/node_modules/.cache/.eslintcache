[{"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\index.js":"1","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\index.js":"2","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Redux\\store.js":"3","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\AuthContext.js":"4","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\reportWebVitals.js":"5","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Login.js":"6","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js":"7","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\CreateRoom.js":"8","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Room.js":"9","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Register.js":"10","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\ResetPassword.js":"11","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Initialization.js":"12","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Bar.js":"13","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Rooms.js":"14","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\HomePage.js":"15","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js":"16","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\DAL\\roomsApi.js":"17","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\CardRoom.js":"18","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Loader.js":"19","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Utils\\validation.js":"20","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Utils\\function.js":"21"},{"size":893,"mtime":1634108527835,"results":"22","hashOfConfig":"23"},{"size":2201,"mtime":1637936922759,"results":"24","hashOfConfig":"23"},{"size":646,"mtime":1634107501868,"results":"25","hashOfConfig":"23"},{"size":1230,"mtime":1634228636307,"results":"26","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"23"},{"size":4316,"mtime":1637747337237,"results":"28","hashOfConfig":"23"},{"size":2683,"mtime":1637747265434,"results":"29","hashOfConfig":"23"},{"size":2851,"mtime":1636031917339,"results":"30","hashOfConfig":"23"},{"size":7710,"mtime":1679917666714,"results":"31","hashOfConfig":"23"},{"size":5611,"mtime":1637747354123,"results":"32","hashOfConfig":"23"},{"size":3875,"mtime":1637747317469,"results":"33","hashOfConfig":"23"},{"size":1002,"mtime":1634228636309,"results":"34","hashOfConfig":"23"},{"size":1851,"mtime":1637150957171,"results":"35","hashOfConfig":"23"},{"size":2471,"mtime":1679918328678,"results":"36","hashOfConfig":"23"},{"size":565,"mtime":1636025223211,"results":"37","hashOfConfig":"23"},{"size":1920,"mtime":1679917804766,"results":"38","hashOfConfig":"23"},{"size":1228,"mtime":1679917806739,"results":"39","hashOfConfig":"23"},{"size":488,"mtime":1636031491731,"results":"40","hashOfConfig":"23"},{"size":301,"mtime":1632323832906,"results":"41","hashOfConfig":"23"},{"size":3228,"mtime":1637175777351,"results":"42","hashOfConfig":"23"},{"size":398,"mtime":1637148101494,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u106ts",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\index.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\index.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Redux\\store.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\AuthContext.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\reportWebVitals.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Login.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\ForgotPassword.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\CreateRoom.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Room.js",["89","90","91","92","93","94","95","96"],"import { useEffect, useState, useRef } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row} from \"react-bootstrap\"\r\nimport InfiniteScrollReverse from \"react-infinite-scroll-reverse\"\r\nimport {getMessges, getUsers, changeMessagesViewed} from \"../DAL/roomsApi\"\r\nimport {BiMessageDetail} from \"react-icons/bi\"\r\nimport {FaUsers} from \"react-icons/fa\"\r\nimport {BsCheck} from \"react-icons/bs\"\r\n\r\n\r\nlet socket \r\nlet morePagination = true\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"https://chat-rooms-react-app.onrender.com\"\r\n    const messagesEndRef = useRef()\r\n    const {id, userName} = decodeJwtToken()\r\n    const {state} = useLocation()\r\n\r\n    const [room, setRoom] = useState(state) // id, roomName, admin\r\n    const [name, setName] = useState(userName) // userName\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [usersRoom, setUsersRoom] = useState([])\r\n    const [bottom, setBottom] = useState(true)\r\n    const [message, setMessage] = useState('') \r\n    const [messages, setMessages] = useState([])\r\n\r\n\r\n\r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current?.scrollIntoView({})\r\n    }\r\n\r\n    useEffect(()=>{scrollToBottom()}, [bottom])\r\n  \r\n    useEffect(()=>{\r\n        getListUsers()\r\n        getMoreMessages(1)\r\n    }, [])\r\n\r\n   \r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection', {name, room}, ()=>{\r\n            })\r\n\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user === \"\" && message.text === \"\") {  // i joined\r\n                getListUsers()\r\n\r\n            } else if(message.user === \"\" && message.text !== \"\"){ //else user joined or left\r\n                getListUsers()\r\n                setMessages(messages => [ ...messages, message ])\r\n\r\n            } else{\r\n                setMessages(messages => [ ...messages, message ])\r\n                setBottom(prev => !prev) // when get new mesage the scroller go bottom\r\n            }       \r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('changeViewed', ({messagesChanged}) => {\r\n\r\n            const messagesId = messagesChanged.map(message => {\r\n                if(message.userName === name){\r\n                    return message.id\r\n                }\r\n            })\r\n\r\n            setMessages(messages => messages.map(message => {\r\n                if (messagesId.includes(message._id)){\r\n                    return { ...message, view: true }\r\n                } else {\r\n                    return message\r\n                }\r\n            }))\r\n        })\r\n    },[])\r\n\r\n\r\n    function sendMessage(){\r\n        if(message.trim()){\r\n            let view \r\n            usersRoom.length > 1 ? view = true : view = false\r\n            socket.emit('sendMessage', {name, room, message, view}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function getListUsers(){\r\n        const users = await getUsers(room.id) \r\n        setUsersRoom(users)\r\n    }\r\n\r\n    async function getMoreMessages(skip) {\r\n        setIsLoading(true)\r\n        const {lastData, nextMessages} = await getMessges(room.id, skip-1) \r\n\r\n        setTimeout(() => {\r\n            setMessages([...nextMessages, ...messages])\r\n            setIsLoading(false)\r\n            viewedMessages(nextMessages)\r\n        }, 300)\r\n\r\n        if(lastData) {\r\n            morePagination = false\r\n        }\r\n    }\r\n\r\n    function  viewedMessages(nextMessages){\r\n        const messagesChanged = nextMessages.map((message)=>{ \r\n            if(message.user !== name && message.view === false){\r\n                message.view = true \r\n                return {id: message._id, userName: message.user }\r\n            }\r\n        }).filter(message => message !== undefined)\r\n\r\n        if(messagesChanged.length > 0){\r\n\r\n            socket.emit('changeViewedMessages', {room, messagesChanged}, ()=>{\r\n            })\r\n\r\n            changeMessagesViewed(messagesChanged)\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center chat\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">Chat Room</h4>\r\n                </div>\r\n\r\n                <div className=\"chat-body\">\r\n                    <div className=\"chat-side-bar\">\r\n                        <div className=\"name-room\">\r\n                            <BiMessageDetail size={25} className=\"icon-msg\"/> <h6>Room Name :</h6>\r\n                        </div>\r\n\r\n                        <div className=\"header-room\">\r\n                            <h4 className=\"text-center\">{room.roomName}</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"name-room mb-2\">\r\n                                <FaUsers size={25} className=\"icon-msg\"/>\r\n                                 <h6>Users :</h6>\r\n                            </div>\r\n                            <div className=\"users-room\">\r\n                                {usersRoom.map((user, index)=> <p key = {index}>{user.userName}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"chat-message-textArea\">\r\n                        <InfiniteScrollReverse\r\n                        className=\"chat-messages\"\r\n                        hasMore={morePagination}\r\n                        isLoading={isLoading}\r\n                        loadMore={getMoreMessages}\r\n                        loadArea={50}\r\n                        >\r\n                            \r\n                            {messages.map((message, index)=>{\r\n                                return  <div key={index} ref = {index === messages.length-1 ? messagesEndRef : null } className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                            <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                                {message.user&&<p className=\"chat-rectangle-name-date my-0 pt-1 pb-0\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <p className=\"chat-rectangle-message\">{message.text}</p>\r\n                                                    {message.user===name&&<BsCheck size = {30} className={`${message.view ? \"icon-v-view\" : \"icon-v-not-view\"} mt-0 mb-0`}/>}                                         \r\n                                                </div>\r\n                                            </span>\r\n                                        </div> \r\n                            })}\r\n                        \r\n                        </InfiniteScrollReverse>\r\n\r\n                        <div className=\"textarea-message\">\r\n                            <textarea className=\"textArea\" rows=\"2\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n                            <button className=\"btn-message\" variant=\"primary\" onClick = {sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Register.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\ResetPassword.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Initialization.js",["97"],"import {useEffect, useContext} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {AuthContext} from '../Components/AuthContext'\r\nimport Loader from \"./Loader\"\r\nimport {updateTokens} from \"../DAL/authenticationApi\"\r\n\r\n\r\nfunction Initialization(){\r\n\r\n    const ctx = useContext(AuthContext)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const login = () => {\r\n        dispatch({type: 'LOGIN'})\r\n    }\r\n\r\n    const logout = () => {\r\n        dispatch({type: 'LOGOUT'})\r\n    }\r\n\r\n    const start = () => {\r\n        dispatch({type: 'START'})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            const {accessToken} = await updateTokens()\r\n            if(accessToken) {\r\n                login()\r\n                ctx.refreshToken(accessToken)\r\n            } else {\r\n                logout()\r\n            }\r\n            setTimeout(()=>{\r\n                start()\r\n            }, 350)\r\n        })()\r\n    },[])\r\n\r\n    return <>\r\n        <Loader/>\r\n    </>\r\n}\r\n\r\nexport default Initialization","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Bar.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Rooms.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\HomePage.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\DAL\\authenticationApi.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\DAL\\roomsApi.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\CardRoom.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Components\\Loader.js",[],"C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Utils\\validation.js",["98","99"],"\r\nfunction validation({value,name},inputsDetails, formType){\r\n\r\n    const newErrors = []\r\n    let inValid = false\r\n    const {validations} = inputsDetails[name]\r\n\r\n    if(name===\"userName\" || name === \"email\" || name===\"roomName\"){\r\n        value = value.trim()\r\n    }\r\n    \r\n    if(validations.required && !value){\r\n      newErrors.push(`נדרש - ${inputsDetails[name].name}`)\r\n      inValid = true\r\n    }\r\n\r\n    if(validations.pattern && !validations.pattern.test(value)){\r\n          newErrors.push(`${inputsDetails[name].name} - ${inputsDetails[name].appropriateError}`)\r\n          inValid = true\r\n    }\r\n\r\n    if(name===\"confirmPassword\" && inputsDetails[\"password\"].value !== value){\r\n        newErrors.push(\"אין התאמה לסיסמא שנבחרה\")\r\n        inValid = true\r\n    }\r\n\r\n\r\n    if((formType === \"register\" || formType === \"resetPassword\") && name === \"password\" && inputsDetails[\"confirmPassword\"].value && inputsDetails[\"confirmPassword\"].value !== value && inputsDetails[\"confirmPassword\"].errors.length === 0){\r\n        inputsDetails[\"confirmPassword\"].errors.push(\"אין התאמה לסיסמא שנבחרה\")\r\n        inputsDetails[\"confirmPassword\"].inValid = true\r\n\r\n    } else if((formType === \"register\" || formType === \"resetPassword\") && name === \"password\" && inputsDetails[\"confirmPassword\"].value && inputsDetails[\"confirmPassword\"].value === value){\r\n        inputsDetails[\"confirmPassword\"].errors = []\r\n        inputsDetails[\"confirmPassword\"].inValid = false\r\n    }\r\n    \r\n    inputsDetails[name].inValid = inValid\r\n    inputsDetails[name].value = value\r\n    inputsDetails[name].errors = newErrors\r\n\r\n   return  {...inputsDetails}\r\n\r\n}\r\n\r\n// validation objects to form\r\n\r\nconst userName = {\r\n    value: '',\r\n    name:\"שם משתמש\",\r\n    inValid:false,\r\n    appropriateError:\"אותיות וספרות בלבד\",\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^[a-zA-Z0-9 \\u0590-\\u05fe]+$/i\r\n    }\r\n}\r\n\r\nconst email = {\r\n    value: '',\r\n    name:\"דואר אלקטרוני\",\r\n    inValid:false,\r\n    appropriateError:\"לא תקין\", \r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/ \r\n    }\r\n} \r\n\r\nconst password = {\r\n    value: '',\r\n    name:\"סיסמא\",\r\n    inValid:false,\r\n    appropriateError:\"לפחות 6 תווים עם אות (אנגלית) וספרה\",\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n        pattern: /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.{6,})/ \r\n    }\r\n}\r\n\r\nconst confirmPassword = {\r\n    value: '',\r\n    name:\"אימות סיסמא\",\r\n    inValid:false,\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n    }\r\n}\r\n\r\nconst roomName = {\r\n    value: '',\r\n    name:\"שם חדר\",\r\n    inValid:false,\r\n    appropriateError:\"אותיות (אנגלית) וספרות\",\r\n    errors:[], \r\n    validations:{\r\n        required: true,\r\n        pattern: /^[a-zA-Z0-9 ]+$/i \r\n    }\r\n}\r\n\r\nconst roomType = {\r\n    value: '',\r\n    name:\"סוג חדר\",\r\n    inValid:false,\r\n    errors:[], \r\n    validations:{\r\n        required: true, \r\n    }\r\n}\r\n\r\n\r\nexport {validation, userName, email, password, confirmPassword, roomName, roomType}","C:\\Users\\נריה\\Desktop\\Projects\\Chat Rooms\\chat-app-client\\src\\chat\\Utils\\function.js",[],{"ruleId":"100","severity":1,"message":"101","line":23,"column":18,"nodeType":"102","messageId":"103","endLine":23,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":24,"column":18,"nodeType":"102","messageId":"103","endLine":24,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":43,"column":8,"nodeType":"107","endLine":43,"endColumn":10,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":57,"column":8,"nodeType":"107","endLine":57,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":75,"column":8,"nodeType":"107","endLine":75,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":81,"column":60,"nodeType":"115","messageId":"116","endLine":81,"endColumn":62},{"ruleId":"105","severity":1,"message":"117","line":95,"column":7,"nodeType":"107","endLine":95,"endColumn":9,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":129,"column":59,"nodeType":"115","messageId":"116","endLine":129,"endColumn":61},{"ruleId":"105","severity":1,"message":"119","line":39,"column":7,"nodeType":"107","endLine":39,"endColumn":9,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":67,"column":25,"nodeType":"123","messageId":"124","endLine":67,"endColumn":26,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":67,"column":41,"nodeType":"123","messageId":"124","endLine":67,"endColumn":42,"suggestions":"126"},"no-unused-vars","'setRoom' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getListUsers' and 'getMoreMessages'. Either include them or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'id', 'name', and 'room'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'getListUsers'. Either include it or remove the dependency array.",["129"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has missing dependencies: 'ctx', 'login', 'logout', and 'start'. Either include them or remove the dependency array.",["131"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["132","133"],["134","135"],{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"149","fix":"150","desc":"151"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"149","fix":"153","desc":"151"},"Update the dependencies array to be: [getListUsers, getMoreMessages]",{"range":"154","text":"155"},"Update the dependencies array to be: [id, name, room]",{"range":"156","text":"157"},"Update the dependencies array to be: [getListUsers]",{"range":"158","text":"159"},"Update the dependencies array to be: [name]",{"range":"160","text":"161"},"Update the dependencies array to be: [ctx, login, logout, start]",{"range":"162","text":"163"},"removeEscape",{"range":"164","text":"165"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"166","text":"167"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"168","text":"165"},{"range":"169","text":"167"},[1376,1378],"[getListUsers, getMoreMessages]",[1655,1657],"[id, name, room]",[2258,2260],"[getListUsers]",[2831,2833],"[name]",[918,920],"[ctx, login, logout, start]",[2117,2118],"",[2117,2117],"\\",[2133,2134],[2133,2133]]