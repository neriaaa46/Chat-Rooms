{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { decodeJwtToken, date } from \"../Utils/function\";\nimport io from 'socket.io-client';\nimport { Container, Row } from \"react-bootstrap\";\nimport InfiniteScrollReverse from \"react-infinite-scroll-reverse\";\nimport { getMessges, getUsers, changeMessagesViewed } from \"../DAL/roomsApi\";\nimport { BiMessageDetail } from \"react-icons/bi\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { BsCheck } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\nlet morePagination = true;\n\nfunction Room() {\n  _s();\n\n  const ENDPOINT = \"localhost:3100\";\n  const messagesEndRef = useRef();\n  const {\n    state\n  } = useLocation();\n  const {\n    id,\n    userName\n  } = decodeJwtToken();\n  const [room, setRoom] = useState(state); // id, roomName, admin, roomType\n\n  const [name, setName] = useState(userName); // userName\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [usersRoom, setUsersRoom] = useState([]);\n  const [bottom, setBottom] = useState(true);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  let itRefresh;\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({});\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem('refreshPage')) {\n      itRefresh = true;\n    } else {\n      sessionStorage.setItem('refreshPage', false);\n    }\n\n    scrollToBottom();\n  }, [bottom]);\n  useEffect(() => {\n    getListUsers();\n    getMoreMessages(1);\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      id,\n      name,\n      room,\n      itRefresh\n    }, () => {});\n    return () => {\n      sessionStorage.removeItem('refreshPage');\n      socket.emit('disconnection', {\n        id,\n        name,\n        room\n      }, () => {});\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('message', ({\n      message\n    }) => {\n      if (message.user === \"\" && message.text === \"\") {\n        // i joined\n        getListUsers();\n      } else if (message.user === \"\" && message.text === \"\") {\n        //else user joined or left\n        getListUsers();\n        setMessages(messages => [...messages, message]);\n      } else {\n        setMessages(messages => [...messages, message]);\n        setBottom(prev => !prev); // when get new mesage the scroller go bottom\n      }\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('changeViewed', ({\n      messagesChanged\n    }) => {\n      const messagesId = messagesChanged.map(message => {\n        if (message.userName === name) {\n          return message.id;\n        }\n      });\n      setMessages(messages => messages.map(message => {\n        if (messagesId.includes(message._id)) {\n          return { ...message,\n            view: true\n          };\n        } else {\n          return message;\n        }\n      }));\n    });\n  }, []);\n\n  function sendMessage() {\n    if (message.trim()) {\n      let view;\n      usersRoom.length > 1 ? view = true : view = false;\n      socket.emit('sendMessage', {\n        name,\n        room,\n        message,\n        view\n      }, () => {});\n      setMessage(\"\");\n    }\n  }\n\n  async function getListUsers() {\n    console.log(1111);\n    const users = await getUsers(room.id);\n    setUsersRoom(users);\n  }\n\n  async function getMoreMessages(skip) {\n    setIsLoading(true);\n    const {\n      lastData,\n      nextMessages\n    } = await getMessges(room.id, skip - 1);\n    setTimeout(() => {\n      setMessages([...nextMessages, ...messages]);\n      setIsLoading(false);\n      viewedMessages(nextMessages);\n    }, 300);\n\n    if (lastData) {\n      morePagination = false;\n    }\n  }\n\n  function viewedMessages(nextMessages) {\n    const messagesChanged = nextMessages.map(message => {\n      if (message.user !== name && message.view === false) {\n        message.view = true;\n        return {\n          id: message._id,\n          userName: message.user\n        };\n      }\n    }).filter(message => message !== undefined);\n\n    if (messagesChanged.length > 0) {\n      socket.emit('changeViewedMessages', {\n        room,\n        messagesChanged\n      }, () => {});\n      changeMessagesViewed(messagesChanged);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center mt-2\",\n            children: \"Chat Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-side-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-room\",\n              children: [/*#__PURE__*/_jsxDEV(BiMessageDetail, {\n                size: 25,\n                className: \"icon-msg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Room Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-room\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-center\",\n                children: room.roomName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-room mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n                  size: 25,\n                  className: \"icon-msg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Users :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"users-room\",\n                children: usersRoom.map((user, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: user.userName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 64\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-textArea\",\n            children: [/*#__PURE__*/_jsxDEV(InfiniteScrollReverse, {\n              className: \"chat-messages\",\n              hasMore: morePagination,\n              isLoading: isLoading,\n              loadMore: getMoreMessages,\n              loadArea: 50,\n              children: messages.map((message, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: index === messages.length - 1 ? messagesEndRef : null,\n                  className: `chat-out ${message.user === name ? \"left\" : \"right\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\"}`,\n                    children: [message.user && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"chat-rectangle-name-date my-0 pt-1 pb-0\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: message.user\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 120\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: date(message.date)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 148\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 64\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex justify-content-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"chat-rectangle-message\",\n                        children: message.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 53\n                      }, this), message.user === name && /*#__PURE__*/_jsxDEV(BsCheck, {\n                        size: 30,\n                        className: `${message.view ? \"icon-v-view\" : \"icon-v-not-view\"} mt-0 mb-0`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 75\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textarea-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textArea\",\n                rows: \"2\",\n                value: message,\n                onChange: e => setMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-message\",\n                variant: \"primary\",\n                onClick: sendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Admin : \", room.admin.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Room, \"eu0LBIeolUgGDKqrsW3nnWVqTSM=\", false, function () {\n  return [useLocation];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Room.js"],"names":["useEffect","useState","useRef","useLocation","decodeJwtToken","date","io","Container","Row","InfiniteScrollReverse","getMessges","getUsers","changeMessagesViewed","BiMessageDetail","FaUsers","BsCheck","socket","morePagination","Room","ENDPOINT","messagesEndRef","state","id","userName","room","setRoom","name","setName","isLoading","setIsLoading","usersRoom","setUsersRoom","bottom","setBottom","message","setMessage","messages","setMessages","itRefresh","scrollToBottom","current","scrollIntoView","sessionStorage","getItem","setItem","getListUsers","getMoreMessages","emit","removeItem","off","on","user","text","prev","messagesChanged","messagesId","map","includes","_id","view","sendMessage","trim","length","console","log","users","skip","lastData","nextMessages","setTimeout","viewedMessages","filter","undefined","roomName","index","e","target","value","admin"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row} from \"react-bootstrap\"\r\nimport InfiniteScrollReverse from \"react-infinite-scroll-reverse\"\r\nimport {getMessges, getUsers, changeMessagesViewed} from \"../DAL/roomsApi\"\r\nimport {BiMessageDetail} from \"react-icons/bi\"\r\nimport {FaUsers} from \"react-icons/fa\"\r\nimport {BsCheck} from \"react-icons/bs\"\r\n\r\n\r\nlet socket \r\nlet morePagination = true\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const messagesEndRef = useRef()\r\n    const {state} = useLocation()\r\n    const {id, userName} = decodeJwtToken()\r\n\r\n    const [room, setRoom] = useState(state) // id, roomName, admin, roomType\r\n    const [name, setName] = useState(userName) // userName\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [usersRoom, setUsersRoom] = useState([])\r\n    const [bottom, setBottom] = useState(true)\r\n    const [message, setMessage] = useState('') \r\n    const [messages, setMessages] = useState([])\r\n\r\n    let itRefresh\r\n\r\n\r\n\r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current?.scrollIntoView({})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(sessionStorage.getItem('refreshPage')){\r\n            itRefresh = true\r\n        } else {\r\n            sessionStorage.setItem('refreshPage', false)\r\n        }\r\n        scrollToBottom()\r\n    }, [bottom])\r\n  \r\n    useEffect(()=>{\r\n        getListUsers()\r\n        getMoreMessages(1)\r\n    }, [])\r\n\r\n   \r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room, itRefresh}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            sessionStorage.removeItem('refreshPage')\r\n            socket.emit('disconnection', {id, name, room}, ()=>{\r\n            })\r\n\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user === \"\" && message.text === \"\") {  // i joined\r\n                getListUsers()\r\n\r\n            } else if(message.user === \"\" && message.text === \"\"){ //else user joined or left\r\n                getListUsers()\r\n                setMessages(messages => [ ...messages, message ])\r\n\r\n            } else{\r\n                setMessages(messages => [ ...messages, message ])\r\n                setBottom(prev => !prev) // when get new mesage the scroller go bottom\r\n            }       \r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('changeViewed', ({messagesChanged}) => {\r\n\r\n            const messagesId = messagesChanged.map(message => {\r\n                if(message.userName === name){\r\n                    return message.id\r\n                }\r\n            })\r\n\r\n            setMessages(messages => messages.map(message => {\r\n                if (messagesId.includes(message._id)){\r\n                    return { ...message, view: true }\r\n                } else {\r\n                    return message\r\n                }\r\n            }))\r\n        })\r\n    },[])\r\n\r\n\r\n    function sendMessage(){\r\n        if(message.trim()){\r\n            let view \r\n            usersRoom.length > 1 ? view = true : view = false\r\n            socket.emit('sendMessage', {name, room, message, view}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function getListUsers(){\r\n        console.log(1111)\r\n        const users = await getUsers(room.id) \r\n        setUsersRoom(users) \r\n    }\r\n\r\n    async function getMoreMessages(skip) {\r\n        setIsLoading(true)\r\n        const {lastData, nextMessages} = await getMessges(room.id, skip-1) \r\n\r\n        setTimeout(() => {\r\n            setMessages([...nextMessages, ...messages])\r\n            setIsLoading(false)\r\n            viewedMessages(nextMessages)\r\n        }, 300)\r\n\r\n        if(lastData) {\r\n            morePagination = false\r\n        }\r\n    }\r\n\r\n    function  viewedMessages(nextMessages){\r\n        const messagesChanged = nextMessages.map((message)=>{ \r\n            if(message.user !== name && message.view === false){\r\n                message.view = true \r\n                return {id: message._id, userName: message.user }\r\n            }\r\n        }).filter(message => message !== undefined)\r\n\r\n        if(messagesChanged.length > 0){\r\n\r\n            socket.emit('changeViewedMessages', {room, messagesChanged}, ()=>{\r\n            })\r\n\r\n            changeMessagesViewed(messagesChanged)\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">Chat Room</h4>\r\n                </div>\r\n\r\n\r\n                <div className=\"chat-body\">\r\n\r\n                    <div className=\"chat-side-bar\">\r\n                        <div className=\"name-room\">\r\n                            <BiMessageDetail size={25} className=\"icon-msg\"/> <h6>Room Name :</h6>\r\n                        </div>\r\n\r\n                        <div className=\"header-room\">\r\n                            <h4 className=\"text-center\">{room.roomName}</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"name-room mb-2\">\r\n                                <FaUsers size={25} className=\"icon-msg\"/>\r\n                                 <h6>Users :</h6>\r\n                            </div>\r\n                            <div className=\"users-room\">\r\n                                {usersRoom.map((user, index)=> <p key = {index}>{user.userName}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"chat-message-textArea\">\r\n                        <InfiniteScrollReverse\r\n                        className=\"chat-messages\"\r\n                        hasMore={morePagination}\r\n                        isLoading={isLoading}\r\n                        loadMore={getMoreMessages}\r\n                        loadArea={50}\r\n                        >\r\n                            \r\n                            {messages.map((message, index)=>{\r\n                                return  <div key={index} ref = {index === messages.length-1 ? messagesEndRef : null } className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                            <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                                {message.user&&<p className=\"chat-rectangle-name-date my-0 pt-1 pb-0\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <p className=\"chat-rectangle-message\">{message.text}</p>\r\n                                                    {message.user===name&&<BsCheck size = {30} className={`${message.view ? \"icon-v-view\" : \"icon-v-not-view\"} mt-0 mb-0`}/>}                                         \r\n                                                </div>\r\n                                            </span>\r\n                                        </div> \r\n                            })}\r\n                        \r\n                        </InfiniteScrollReverse>\r\n\r\n\r\n                        <div className=\"textarea-message\">\r\n                            <textarea className=\"textArea\" rows=\"2\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n                            <button className=\"btn-message\" variant=\"primary\" onClick = {sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room"]},"metadata":{},"sourceType":"module"}