{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms new/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms new/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms new/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms new/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Form,Button,Row,Col,Container}from\"react-bootstrap\";import{useState}from\"react\";import{email,validation}from\"../Utils/validation\";import{sendEmailToResetPassword}from\"../DAL/authenticationApi\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ForgotPassword(){email.inValid=false;email.errors=[];var _useState=useState({email:_objectSpread(_objectSpread({},email),{},{inValid:false,value:\"\",error:[]})}),_useState2=_slicedToArray(_useState,2),emailToResetPassword=_useState2[0],setEmailToResetPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];function submit(_x){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var isValid,_yield$sendEmailToRes,_message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();isValid=true;setEmailToResetPassword(validation({value:emailToResetPassword[\"email\"].value,name:\"email\"},emailToResetPassword,\"forgotPassword\"));if(emailToResetPassword[\"email\"].errors.length!==0){isValid=false;}if(!isValid){_context.next=11;break;}_context.next=7;return sendEmailToResetPassword({email:emailToResetPassword[\"email\"].value});case 7:_yield$sendEmailToRes=_context.sent;_message=_yield$sendEmailToRes.message;setMessage(_message);setTimeout(function(){setMessage(\"\");},4000);case 11:case\"end\":return _context.stop();}}},_callee);}));return _submit.apply(this,arguments);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{className:\"container-base mt-4\",children:/*#__PURE__*/_jsxs(Form,{className:\"form-base\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mt-3 mb-4\",children:\"Forgot Password\"}),/*#__PURE__*/_jsxs(Row,{className:\"justify-content-center\",children:[/*#__PURE__*/_jsxs(Col,{xs:11,md:8,lg:6,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"input-base\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"email\",isInvalid:emailToResetPassword[\"email\"].inValid,placeholder:\"Email\",onBlur:function onBlur(e){setEmailToResetPassword(validation(e.target,emailToResetPassword,\"forgotPassword\"));}}),emailToResetPassword[\"email\"].errors.map(function(value,index){return/*#__PURE__*/_jsxs(Form.Control.Feedback,{className:\"feedback\",type:\"invalid\",children:[\" \",value,\" \"]},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Button,{className:\"btn-base mb-3\",variant:\"dark\",type:\"submit\",onClick:function onClick(e){submit(e);},children:\"Submit\"})})]}),/*#__PURE__*/_jsx(Row,{className:\"message-base justify-content-center align-items-center mb-3\",children:message&&/*#__PURE__*/_jsx(\"small\",{children:message})})]})]})})});}export default ForgotPassword;","map":{"version":3,"sources":["C:/Users/נריה/Desktop/chat rooms new/chat-app-client/src/chat/Components/ForgotPassword.js"],"names":["Form","Button","Row","Col","Container","useState","email","validation","sendEmailToResetPassword","ForgotPassword","inValid","errors","value","error","emailToResetPassword","setEmailToResetPassword","message","setMessage","submit","e","preventDefault","isValid","name","length","setTimeout","target","map","index"],"mappings":"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","sourcesContent":["import {Form, Button, Row, Col, Container} from \"react-bootstrap\"\r\nimport {useState} from \"react\"\r\nimport { email ,validation} from \"../Utils/validation\"\r\nimport {sendEmailToResetPassword} from \"../DAL/authenticationApi\"\r\n\r\nfunction ForgotPassword(){\r\n\r\n    email.inValid = false \r\n    email.errors = [] \r\n    \r\n    const [emailToResetPassword, setEmailToResetPassword] = useState({\r\n          email: {...email, inValid: false, value: \"\", error: []}\r\n        })\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    async function submit(e){\r\n        e.preventDefault()\r\n        let isValid = true\r\n\r\n        setEmailToResetPassword(validation({value:emailToResetPassword[\"email\"].value, name:\"email\"}, emailToResetPassword, \"forgotPassword\"))\r\n        if (emailToResetPassword[\"email\"].errors.length !==0){\r\n            isValid = false\r\n        }\r\n        \r\n        if(isValid){\r\n            const {message} = await sendEmailToResetPassword({email: emailToResetPassword[\"email\"].value})\r\n            setMessage(message)\r\n            setTimeout(()=>{\r\n                setMessage(\"\")\r\n            },4000)\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Container className=\"container-base mt-4\">\r\n            <Form className=\"form-base\"> \r\n                \r\n                <h1 className=\"text-center mt-3 mb-4\">Forgot Password</h1>\r\n                <Row className=\"justify-content-center\">\r\n\r\n                    <Col xs={11} md={8} lg={6}>\r\n                        <Form.Group className=\"input-base\">\r\n                            <Form.Control type=\"email\" name=\"email\" isInvalid={emailToResetPassword[\"email\"].inValid} placeholder=\"Email\"\r\n                            onBlur={(e)=>{setEmailToResetPassword(validation(e.target,emailToResetPassword, \"forgotPassword\"))}}/>\r\n                            {emailToResetPassword[\"email\"].errors.map((value,index)=>\r\n                            {return <Form.Control.Feedback className=\"feedback\" key={index} type=\"invalid\"> {value} </Form.Control.Feedback>})}\r\n                        </Form.Group>\r\n\r\n\r\n                        <div className=\"text-center\">\r\n                            <Button className=\"btn-base mb-3\" variant=\"dark\" type=\"submit\" onClick={(e)=>{submit(e)}}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Row className=\"message-base justify-content-center align-items-center mb-3\">\r\n                        {message&&<small>{message}</small>}\r\n                    </Row>\r\n\r\n                </Row>\r\n                \r\n            </Form>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default ForgotPassword"]},"metadata":{},"sourceType":"module"}