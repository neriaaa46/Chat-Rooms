{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { inMemoryToken } from \"../Components/AuthContext\";\nconst baseUrl = \"https://localhost:3100\";\n\nasync function createCsrfToken() {\n  const response = await fetch(`${baseUrl}/csrf`, {\n    method: 'GET',\n    credentials: 'include'\n  });\n  return response.json();\n}\n\nasync function register(user) {\n  const response = await fetch(`${baseUrl}/users/register`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'x-xsrf-token': Cookies.get('XSRF-TOKEN')\n    },\n    body: JSON.stringify(user)\n  });\n  return response;\n}\n\nasync function login(user) {\n  const response = await fetch(`${baseUrl}/users/login`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'x-xsrf-token': Cookies.get('XSRF-TOKEN')\n    },\n    body: JSON.stringify(user)\n  });\n  return response;\n}\n\nasync function updateTokens(inMemoryToken) {\n  const response = await fetch(`${baseUrl}/refreshToken`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'x-xsrf-token': Cookies.get('XSRF-TOKEN'),\n      'authorization': `Bearer ${inMemoryToken}`\n    }\n  });\n  return response.json();\n}\n\nasync function logout() {\n  fetch(`${baseUrl}/users/logout`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nasync function getDetails() {\n  const response = await fetch(`${baseUrl}/details`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': `Bearer ${inMemoryToken}`\n    }\n  });\n  return response;\n}\n\nasync function sendEmailToResetPassword(email) {\n  const response = await fetch(`${baseUrl}/email/resetPassword`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'x-xsrf-token': Cookies.get('XSRF-TOKEN')\n    },\n    body: JSON.stringify(email)\n  });\n  return response.json();\n}\n\nasync function changePassword(reset) {\n  const response = await fetch(`${baseUrl}/users/changePassword`, {\n    method: 'PUT',\n    cardentials: 'include',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(reset)\n  });\n  return response;\n}\n\nexport { register, login, createCsrfToken, updateTokens, logout, getDetails, sendEmailToResetPassword, changePassword };","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/DAL/api.js"],"names":["Cookies","inMemoryToken","baseUrl","createCsrfToken","response","fetch","method","credentials","json","register","user","headers","get","body","JSON","stringify","login","updateTokens","logout","getDetails","sendEmailToResetPassword","email","changePassword","reset","cardentials"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\"\r\nimport { inMemoryToken } from \"../Components/AuthContext\"\r\n\r\nconst baseUrl = \"https://localhost:3100\"\r\n\r\nasync function createCsrfToken(){\r\n    const response = await fetch(`${baseUrl}/csrf`, {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    })\r\n    return response.json()\r\n}\r\n\r\n\r\nasync function register(user){\r\n    const response = await fetch(`${baseUrl}/users/register`, {\r\n        method:'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json',\r\n                 'x-xsrf-token': Cookies.get('XSRF-TOKEN')}, \r\n        body: JSON.stringify(user)\r\n    })\r\n    return response\r\n}\r\n\r\nasync function login(user){\r\n    const response = await fetch(`${baseUrl}/users/login`,{\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json',\r\n                 'x-xsrf-token': Cookies.get('XSRF-TOKEN')}, \r\n        body: JSON.stringify(user)\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nasync function updateTokens(inMemoryToken){\r\n    const response = await fetch(`${baseUrl}/refreshToken`, {\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json',\r\n                 'x-xsrf-token': Cookies.get('XSRF-TOKEN'), \r\n                 'authorization': `Bearer ${inMemoryToken}`}\r\n    })\r\n    return response.json()\r\n}\r\n\r\n\r\n\r\nasync function logout(){\r\n    fetch(`${baseUrl}/users/logout`,{\r\n        method: 'POST', \r\n        credentials: 'include', \r\n        headers:{'Content-Type': 'application/json'}\r\n    }) \r\n} \r\n\r\n\r\n\r\nasync function getDetails(){\r\n    const response = await fetch(`${baseUrl}/details`,{\r\n        method: 'GET', \r\n        credentials: 'include', \r\n        headers: {'Content-Type': 'application/json', \r\n                  'authorization': `Bearer ${inMemoryToken}`}\r\n    })\r\n    return response\r\n}\r\n\r\n\r\n\r\nasync function sendEmailToResetPassword(email){\r\n    const response = await fetch(`${baseUrl}/email/resetPassword`, {\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers: {'Content-Type': 'application/json',\r\n                  'x-xsrf-token': Cookies.get('XSRF-TOKEN')}, \r\n        body: JSON.stringify(email)\r\n    })\r\n    return response.json()\r\n}\r\n\r\n\r\n\r\nasync function changePassword(reset){\r\n    const response = await fetch(`${baseUrl}/users/changePassword`, {\r\n        method: 'PUT', \r\n        cardentials: 'include',\r\n        headers:{'Content-type': 'application/json'},\r\n        body: JSON.stringify(reset)\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nexport {register, login, createCsrfToken, updateTokens, logout, getDetails, sendEmailToResetPassword, changePassword}"]},"metadata":{},"sourceType":"module"}