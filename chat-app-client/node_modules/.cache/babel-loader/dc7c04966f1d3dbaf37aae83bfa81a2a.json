{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { decodeJwtToken, date } from \"../Utils/function\";\nimport io from 'socket.io-client';\nimport { Container, Row, Form, Button } from \"react-bootstrap\";\nimport { getRoom } from \"../DAL/roomsApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Room() {\n  _s();\n\n  const myRef = useRef(null);\n  const ENDPOINT = \"localhost:3100\";\n  const {\n    state\n  } = useLocation();\n  const {\n    id,\n    userName\n  } = decodeJwtToken();\n  const [room, setRoom] = useState(state);\n  const [name, setName] = useState(userName);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const executeScroll = () => {\n    myRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    executeScroll();\n  }, [messages]);\n  useEffect(async () => {\n    const roomDetails = await getRoom(state._id);\n    setRoom(roomDetails);\n    setMessages(roomDetails.messages);\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      id,\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnection', {\n        id,\n        name,\n        room\n      }, () => {});\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('message', ({\n      message\n    }) => {\n      console.log(message);\n      setMessages(messages => [...messages, message]);\n    });\n  }, []);\n\n  function sendMessage() {\n    if (message) {\n      socket.emit('sendMessage', {\n        name,\n        room,\n        message\n      }, () => {});\n      setMessage(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center mt-2\",\n            children: room.roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-side-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: messages.map((message, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat-out ${message.user === name ? \"left\" : \"right\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\"}`,\n                  children: [message.user && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"chat-rectangle-name-date\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: message.user\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 101\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: date(message.date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 129\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 60\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"chat-rectangle-message\",\n                    children: [message.text, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Admin : \", room.admin.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Room, \"XmT7Qu1IGh4ST50FPlxOIYjAm78=\", false, function () {\n  return [useLocation];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Room.js"],"names":["useEffect","useRef","useState","useLocation","decodeJwtToken","date","io","Container","Row","Form","Button","getRoom","socket","Room","myRef","ENDPOINT","state","id","userName","room","setRoom","name","setName","message","setMessage","messages","setMessages","executeScroll","current","scrollIntoView","behavior","roomDetails","_id","emit","off","on","console","log","sendMessage","roomName","map","index","user","text","admin"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row, Form, Button} from \"react-bootstrap\"\r\nimport {getRoom} from \"../DAL/roomsApi\"\r\n\r\n\r\n\r\nlet socket \r\n\r\nfunction Room(){\r\n\r\n    const myRef = useRef(null)\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const {state} = useLocation()\r\n    const {id, userName} = decodeJwtToken()\r\n\r\n    const [room, setRoom] = useState(state)\r\n    const [name, setName] = useState(userName)\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const executeScroll = () =>{\r\n        myRef.current.scrollIntoView({behavior: \"smooth\"})\r\n    } \r\n\r\n\r\n    useEffect(()=>{executeScroll()},[messages])\r\n\r\n    useEffect(async()=>{\r\n        const roomDetails = await getRoom(state._id)\r\n        setRoom(roomDetails)  \r\n        setMessages(roomDetails.messages) \r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection', {id, name, room}, ()=>{\r\n            })\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n            console.log(message)\r\n            setMessages(messages => [ ...messages, message ])\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    function sendMessage(){\r\n        if(message){\r\n            socket.emit('sendMessage', {name, room, message}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">{room.roomName}</h4>\r\n                </div>\r\n\r\n\r\n                <div className=\"chat-body\">\r\n\r\n                    <div className=\"chat-side-bar\">\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"chat-messages\">\r\n                        {messages.map((message, index)=>{\r\n                            return  <div key={index} className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                        <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                            {message.user&&<p className=\"chat-rectangle-name-date\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                            <p className=\"chat-rectangle-message\">{message.text} </p>\r\n                                        </span>\r\n                                    </div> \r\n\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n\r\n            {/* <Row className=\"justify-content-center\">\r\n                <Form.Group className=\"mb-3 mt-4 textarea-message\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Control as=\"textarea\" value={message} rows={3} onChange={(e)=>setMessage(e.target.value)} />\r\n                </Form.Group>\r\n            </Row> */}\r\n\r\n            {/* <Row className=\"justify-content-center\">\r\n               <Button className=\"btn-message\" variant=\"dark\" onClick = {sendMessage}>Send</Button>\r\n            </Row> */}\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room"]},"metadata":{},"sourceType":"module"}