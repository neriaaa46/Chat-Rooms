{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { decodeJwtToken } from \"../Utils/function\";\nimport io from 'socket.io-client';\nimport { Container, Row, Form, Button } from \"react-bootstrap\";\nimport { getRoom } from \"../DAL/roomsApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Room() {\n  _s();\n\n  const ENDPOINT = \"localhost:3100\";\n  const {\n    id: roomId\n  } = useParams();\n  const {\n    userName\n  } = decodeJwtToken();\n  const [room, setRoom] = useState({});\n  const [name, setName] = useState(userName);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(async () => {\n    console.log(roomId);\n    const roomDetails = await getRoom(roomId);\n    console.log(roomDetails);\n    setRoom(roomDetails);\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnection');\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('message', ({\n      message\n    }) => {\n      if (message.user && message.user === name) {\n        message.color = \"my-message\";\n        message.side = 'left';\n      } else {\n        message.color = \"other-message\";\n        message.side = 'right';\n      }\n\n      setMessages(messages => [...messages, message]);\n    });\n  }, []);\n\n  function sendMessage() {\n    if (message) {\n      socket.emit('sendMessage', {\n        message,\n        room,\n        name\n      }, () => {});\n      setMessage(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Room, \"lThdhy9Ae2gGks6ZGessOSinY3o=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Room.js"],"names":["useEffect","useState","useParams","decodeJwtToken","io","Container","Row","Form","Button","getRoom","socket","Room","ENDPOINT","id","roomId","userName","room","setRoom","name","setName","message","setMessage","messages","setMessages","console","log","roomDetails","emit","off","on","user","color","side","sendMessage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,iBAA5C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;AAEA,IAAIC,MAAJ;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAM;AAACC,IAAAA,EAAE,EAACC;AAAJ,MAAcZ,SAAS,EAA7B;AACA,QAAM;AAACa,IAAAA;AAAD,MAAaZ,cAAc,EAAjC;AAEA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACc,QAAD,CAAhC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,YAAS;AACfwB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,UAAMY,WAAW,GAAG,MAAMjB,OAAO,CAACK,MAAD,CAAjC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAT,IAAAA,OAAO,CAACS,WAAD,CAAP;AAEH,GANQ,EAMN,EANM,CAAT;AASA1B,EAAAA,SAAS,CAAC,MAAI;AAEVU,IAAAA,MAAM,GAAGN,EAAE,CAACQ,QAAD,CAAX;AAEAF,IAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoB;AAACT,MAAAA,IAAD;AAAOF,MAAAA;AAAP,KAApB,EAAkC,MAAI,CAErC,CAFD;AAIA,WAAO,MAAM;AACTN,MAAAA,MAAM,CAACiB,IAAP,CAAY,eAAZ;AACAjB,MAAAA,MAAM,CAACkB,GAAP;AACH,KAHD;AAKH,GAbQ,EAaN,EAbM,CAAT;AAgBA5B,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqB,CAAC;AAACT,MAAAA;AAAD,KAAD,KAAe;AAEhC,UAAGA,OAAO,CAACU,IAAR,IAAgBV,OAAO,CAACU,IAAR,KAAiBZ,IAApC,EAAyC;AACtCE,QAAAA,OAAO,CAACW,KAAR,GAAgB,YAAhB;AACAX,QAAAA,OAAO,CAACY,IAAR,GAAe,MAAf;AAEF,OAJD,MAIO;AACHZ,QAAAA,OAAO,CAACW,KAAR,GAAgB,eAAhB;AACAX,QAAAA,OAAO,CAACY,IAAR,GAAe,OAAf;AACH;;AAEDT,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAE,GAAGA,QAAL,EAAeF,OAAf,CAAb,CAAX;AACH,KAZD;AAcH,GAfQ,EAeN,EAfM,CAAT;;AAkBA,WAASa,WAAT,GAAsB;AAClB,QAAGb,OAAH,EAAW;AACPV,MAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ,EAA2B;AAACP,QAAAA,OAAD;AAAUJ,QAAAA,IAAV;AAAgBE,QAAAA;AAAhB,OAA3B,EAAkD,MAAI,CAErD,CAFD;AAGAG,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ;;AAGD,sBAAO;AAAA,2BACH,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAkCH;;GApGQV,I;UAGeT,S;;;KAHfS,I;AAsGT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport {decodeJwtToken} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row, Form, Button} from \"react-bootstrap\"\r\nimport {getRoom} from \"../DAL/roomsApi\"\r\n\r\nlet socket\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const {id:roomId} = useParams()\r\n    const {userName} = decodeJwtToken()\r\n\r\n    const [room, setRoom] = useState({})\r\n    const [name, setName] = useState(userName)\r\n    \r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n\r\n    useEffect(async()=>{\r\n        console.log(roomId);\r\n        const roomDetails = await getRoom(roomId)\r\n        console.log(roomDetails);\r\n        setRoom(roomDetails)\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        socket = io(ENDPOINT)\r\n\r\n        socket.emit('join', {name, room}, ()=>{\r\n\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection')\r\n            socket.off()\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user && message.user === name){\r\n               message.color = \"my-message\" \r\n               message.side = 'left'\r\n\r\n            } else {\r\n                message.color = \"other-message\" \r\n                message.side = 'right'\r\n            }\r\n           \r\n            setMessages(messages => [ ...messages, message ])\r\n        })\r\n        \r\n    }, [])\r\n\r\n\r\n    function sendMessage(){\r\n        if(message){\r\n            socket.emit('sendMessage', {message, room, name}, ()=>{\r\n\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            {/* <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">{room.roomName}</h4>\r\n                </div>\r\n\r\n                <div className=\"chat-body\">\r\n                    {messages.map((message, index)=>{\r\n                        return  <div key={index} className={`chat-out ${message.side}`}> \r\n                                    <span className={`chat-rectangle ${message.color}`}>\r\n                                        {message.user&&<p className=\"chat-rectangle-name\">{message.user} </p>}\r\n                                        <p className=\"chat-rectangle-message\">{message.text} </p>\r\n                                    </span>\r\n                                </div>\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-center\">\r\n                <Form.Group className=\"mb-3 mt-4 textarea-message\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Control as=\"textarea\" value={message} rows={3} onChange={(e)=>setMessage(e.target.value)} />\r\n                </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-center\">\r\n               <Button className=\"btn-message\" variant=\"dark\" onClick = {sendMessage}>Send</Button>\r\n            </Row> */}\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room"]},"metadata":{},"sourceType":"module"}