{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Initialization.js\",\n    _s = $RefreshSig$();\n\nimport jwt from \"jsonwebtoken\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"./Loader\";\nimport { updateTokens } from \"../DAL/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MINUTE = 60;\nlet inMemoryToken = \"\";\n\nfunction Initialization() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const login = () => {\n    dispatch({\n      type: 'login'\n    });\n  };\n\n  const logout = () => {\n    dispatch({\n      type: 'logout'\n    });\n  };\n\n  const start = () => {\n    dispatch({\n      type: 'start'\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const {\n        accessToken\n      } = await updateTokens();\n\n      if (accessToken) {\n        login();\n        getRefreshToken(accessToken);\n      } else {\n        logout();\n      }\n\n      setTimeout(() => {\n        start();\n      }, 300);\n    })();\n  }, []);\n\n  function getRefreshToken(token) {\n    inMemoryToken = token;\n    const decode = jwt.decode(token);\n    setTimeout(async () => {\n      const {\n        accessToken\n      } = await updateTokens(inMemoryToken);\n\n      if (accessToken) {\n        getRefreshToken(accessToken);\n      } else {\n        logout();\n        history.push('/login');\n      }\n    }, (decode.exp - decode.iat - MINUTE * 3) * 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Initialization, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Initialization;\nexport default {\n  Initialization\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Initialization\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Initialization.js"],"names":["jwt","useEffect","useDispatch","Loader","updateTokens","MINUTE","inMemoryToken","Initialization","dispatch","login","type","logout","start","accessToken","getRefreshToken","setTimeout","token","decode","history","push","exp","iat"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,YAAR,QAA2B,YAA3B;;;AAGA,MAAMC,MAAM,GAAG,EAAf;AACA,IAAIC,aAAa,GAAG,EAApB;;AAGA,SAASC,cAAT,GAAyB;AAAA;;AAErB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,KAAK,GAAG,MAAM;AAChBD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACjBH,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG,MAAM;AAChBJ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAI;AACV,KAAC,YAAU;AACP,YAAM;AAACY,QAAAA;AAAD,UAAgB,MAAMT,YAAY,EAAxC;;AACA,UAAGS,WAAH,EAAgB;AACZJ,QAAAA,KAAK;AACLK,QAAAA,eAAe,CAACD,WAAD,CAAf;AACH,OAHD,MAGO;AACHF,QAAAA,MAAM;AACT;;AACDI,MAAAA,UAAU,CAAC,MAAI;AACXH,QAAAA,KAAK;AACR,OAFS,EAEP,GAFO,CAAV;AAGH,KAXD;AAYH,GAbQ,EAaP,EAbO,CAAT;;AAgBA,WAASE,eAAT,CAAyBE,KAAzB,EAA+B;AAC3BV,IAAAA,aAAa,GAAGU,KAAhB;AAEA,UAAMC,MAAM,GAAGjB,GAAG,CAACiB,MAAJ,CAAWD,KAAX,CAAf;AACAD,IAAAA,UAAU,CAAC,YAAY;AACnB,YAAM;AAACF,QAAAA;AAAD,UAAgB,MAAMT,YAAY,CAACE,aAAD,CAAxC;;AACA,UAAGO,WAAH,EAAgB;AACZC,QAAAA,eAAe,CAACD,WAAD,CAAf;AACH,OAFD,MAEO;AACHF,QAAAA,MAAM;AACNO,QAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH;AAEJ,KATS,EASP,CAACF,MAAM,CAACG,GAAP,GAAaH,MAAM,CAACI,GAApB,GAA0BhB,MAAM,GAAC,CAAlC,IAAqC,IAT9B,CAAV;AAUH;;AAID,sBAAO;AAAA,2BACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAGH;;GArDQE,c;UAEYL,W;;;KAFZK,c;AAuDT,eAAe;AAACA,EAAAA;AAAD,CAAf","sourcesContent":["import jwt from \"jsonwebtoken\"\r\nimport {useEffect} from \"react\"; \r\nimport { useDispatch } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport {updateTokens} from \"../DAL/api\"\r\n\r\n\r\nconst MINUTE = 60 \r\nlet inMemoryToken = \"\"\r\n\r\n\r\nfunction Initialization(){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const login = () => {\r\n        dispatch({type: 'login'})\r\n    }\r\n\r\n    const logout = () => {\r\n        dispatch({type: 'logout'})\r\n    }\r\n\r\n    const start = () => {\r\n        dispatch({type: 'start'})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            const {accessToken} = await updateTokens()\r\n            if(accessToken) {\r\n                login()\r\n                getRefreshToken(accessToken)\r\n            } else {\r\n                logout()\r\n            }\r\n            setTimeout(()=>{\r\n                start()\r\n            }, 300)\r\n        })()\r\n    },[])\r\n\r\n\r\n    function getRefreshToken(token){\r\n        inMemoryToken = token\r\n\r\n        const decode = jwt.decode(token)\r\n        setTimeout(async () => {\r\n            const {accessToken} = await updateTokens(inMemoryToken)\r\n            if(accessToken) {\r\n                getRefreshToken(accessToken)\r\n            } else {\r\n                logout()\r\n                history.push('/login')\r\n            }\r\n    \r\n        }, (decode.exp - decode.iat - MINUTE*3)*1000)  \r\n    }\r\n\r\n\r\n\r\n    return <>\r\n        <Loader/>\r\n    </>\r\n}\r\n\r\nexport default {Initialization} "]},"metadata":{},"sourceType":"module"}