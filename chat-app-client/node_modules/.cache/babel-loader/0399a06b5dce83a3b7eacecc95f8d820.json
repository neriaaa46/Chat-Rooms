{"ast":null,"code":"import { inMemoryToken } from \"../Components/AuthContext\";\nimport jwt from \"jsonwebtoken\";\n\nfunction decodeJwtToken() {\n  return jwt.decode(inMemoryToken);\n}\n\nfunction date(DateTime) {\n  console.log(DateTime);\n  let date;\n  let time;\n\n  if (String(DateTime).indexOf() !== -1) {\n    date = DateTime.slice(0, 10).split(\"-\").reverse().join(\"/\");\n    time = DateTime.slice(11, 16);\n  } else {// let year = DateTime.getFullYear()\n    // let month = DateTime.getMonth()\n    // let day = DateTime.getDay() \n    // let hour = DateTime.getHours() \n    // let minutes = DateTime.getMinutes() \n    // date = `${day}/${month}/${year}`\n    // date = `${hour}:${minutes}`\n  }\n\n  return time + \" \" + date;\n}\n\nexport { decodeJwtToken, date };","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Utils/function.js"],"names":["inMemoryToken","jwt","decodeJwtToken","decode","date","DateTime","console","log","time","String","indexOf","slice","split","reverse","join"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,cAAT,GAAyB;AACrB,SAAOD,GAAG,CAACE,MAAJ,CAAWH,aAAX,CAAP;AACH;;AAID,SAASI,IAAT,CAAcC,QAAd,EAAuB;AAEnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,MAAID,IAAJ;AACA,MAAII,IAAJ;;AAEA,MAAGC,MAAM,CAACJ,QAAD,CAAN,CAAiBK,OAAjB,OAA+B,CAAC,CAAnC,EAAsC;AAElCN,IAAAA,IAAI,GAAGC,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,EAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,OAAhC,GAA0CC,IAA1C,CAA+C,GAA/C,CAAP;AACAN,IAAAA,IAAI,GAAGH,QAAQ,CAACM,KAAT,CAAe,EAAf,EAAkB,EAAlB,CAAP;AAEH,GALD,MAKO,CACH;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AAGD,SAAOH,IAAI,GAAE,GAAN,GAAUJ,IAAjB;AACH;;AAED,SAAQF,cAAR,EAAwBE,IAAxB","sourcesContent":["import { inMemoryToken } from \"../Components/AuthContext\";\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nfunction decodeJwtToken(){\r\n    return jwt.decode(inMemoryToken)\r\n}\r\n\r\n\r\n\r\nfunction date(DateTime){\r\n\r\n    console.log(DateTime);\r\n\r\n    let date\r\n    let time\r\n\r\n    if(String(DateTime).indexOf() !== -1 ){\r\n\r\n        date = DateTime.slice(0,10).split(\"-\").reverse().join(\"/\")\r\n        time = DateTime.slice(11,16)\r\n\r\n    } else {\r\n        // let year = DateTime.getFullYear()\r\n        // let month = DateTime.getMonth()\r\n        // let day = DateTime.getDay() \r\n        // let hour = DateTime.getHours() \r\n        // let minutes = DateTime.getMinutes() \r\n\r\n        // date = `${day}/${month}/${year}`\r\n        // date = `${hour}:${minutes}`\r\n    }\r\n    \r\n\r\n    return time +\" \"+date\r\n}\r\n\r\nexport {decodeJwtToken, date}\r\n"]},"metadata":{},"sourceType":"module"}