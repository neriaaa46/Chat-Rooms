{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { decodeJwtToken, date } from \"../Utils/function\";\nimport io from 'socket.io-client';\nimport { Container, Row } from \"react-bootstrap\";\nimport { getMessges, getUsers, getSkip } from \"../DAL/roomsApi\";\nimport { BiMessageDetail } from \"react-icons/bi\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Room() {\n  _s();\n\n  const myRef = useRef(null);\n  const ENDPOINT = \"localhost:3100\";\n  const {\n    state\n  } = useLocation();\n  const {\n    id,\n    userName\n  } = decodeJwtToken();\n  const [room, setRoom] = useState(state); // id, roomName, admin, roomType\n\n  const [name, setName] = useState(userName); // userName\n\n  const [usersRoom, setUsersRoom] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [skip, setSkip] = useState(0);\n\n  const executeScroll = () => {\n    myRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const handleScroll = e => {\n    if (e.target.scrollTop === 0) {\n      if (skip > 1) {\n        setSkip(skip - 1);\n        getMoreMessages();\n      }\n    }\n  };\n\n  useEffect(async () => {\n    executeScroll();\n    const {\n      skip\n    } = await getSkip(room.id);\n    setSkip(skip);\n    setTimeout;\n    getMoreMessages();\n  }, []);\n  useEffect(async () => {\n    getListUsers();\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      id,\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnection', {\n        id,\n        name,\n        room\n      }, () => {});\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('message', ({\n      message\n    }) => {\n      if (message.user === \"\") {\n        //user joined or left\n        getListUsers();\n      }\n\n      setMessages(messages => [...messages, message]);\n      executeScroll();\n    });\n  }, []);\n\n  async function getListUsers() {\n    const users = await getUsers(room.id);\n    setUsersRoom(users);\n  }\n\n  async function getMoreMessages() {\n    const messagesHistory = await getMessges(room.id, skip);\n    setMessages([...messages, ...messagesHistory]);\n  }\n\n  function sendMessage() {\n    if (message) {\n      socket.emit('sendMessage', {\n        name,\n        room,\n        message\n      }, () => {});\n      setMessage(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center mt-2\",\n            children: \"Chat Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-side-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-room\",\n              children: [/*#__PURE__*/_jsxDEV(BiMessageDetail, {\n                size: 25,\n                className: \"icon-msg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Room Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-room\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-center\",\n                children: room.roomName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-room mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n                  size: 25,\n                  className: \"icon-msg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Users :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"users-room\",\n                children: usersRoom.map((user, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: user.userName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 64\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-textArea\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-messages\",\n              onScroll: e => handleScroll(e),\n              children: [messages.map((message, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `chat-out ${message.user === name ? \"left\" : \"right\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\"}`,\n                    children: [message.user && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"chat-rectangle-name-date\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: message.user\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 105\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: date(message.date)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 133\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 64\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"chat-rectangle-message\",\n                      children: [message.text, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"span\", {\n                ref: myRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textarea-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textArea\",\n                rows: \"2\",\n                value: message,\n                onChange: e => setMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-message\",\n                variant: \"primary\",\n                onClick: sendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Admin : \", room.admin.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Room, \"gjylaGYO8V4+OyxgevIDCpHr0/Q=\", false, function () {\n  return [useLocation];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Room.js"],"names":["useEffect","useRef","useState","useLocation","decodeJwtToken","date","io","Container","Row","getMessges","getUsers","getSkip","BiMessageDetail","FaUsers","socket","Room","myRef","ENDPOINT","state","id","userName","room","setRoom","name","setName","usersRoom","setUsersRoom","message","setMessage","messages","setMessages","skip","setSkip","executeScroll","current","scrollIntoView","behavior","handleScroll","e","target","scrollTop","getMoreMessages","setTimeout","getListUsers","emit","off","on","user","users","messagesHistory","sendMessage","roomName","map","index","text","value","admin"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken, date} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row} from \"react-bootstrap\"\r\nimport {getMessges, getUsers, getSkip} from \"../DAL/roomsApi\"\r\nimport {BiMessageDetail} from \"react-icons/bi\"\r\nimport {FaUsers} from \"react-icons/fa\"\r\n\r\n\r\nlet socket \r\n\r\nfunction Room(){\r\n\r\n    const myRef = useRef(null)\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const {state} = useLocation()\r\n    const {id, userName} = decodeJwtToken()\r\n\r\n    const [room, setRoom] = useState(state) // id, roomName, admin, roomType\r\n    const [name, setName] = useState(userName) // userName\r\n\r\n    const [usersRoom, setUsersRoom] = useState([])\r\n    const [message, setMessage] = useState('') \r\n    const [messages, setMessages] = useState([])\r\n    const [skip, setSkip] = useState(0)\r\n\r\n    const executeScroll = () =>{\r\n        myRef.current.scrollIntoView({behavior: \"smooth\"})\r\n    } \r\n\r\n    const  handleScroll = e => {\r\n        if (e.target.scrollTop===0) {\r\n            if(skip>1){\r\n                setSkip(skip-1)\r\n                getMoreMessages()\r\n            }\r\n        }\r\n     }\r\n\r\n    useEffect(async()=>{\r\n        executeScroll()\r\n        const {skip} = await getSkip(room.id)\r\n        setSkip(skip)\r\n        setTimeout\r\n        getMoreMessages()\r\n    },[])\r\n\r\n   \r\n    useEffect(async()=>{\r\n        getListUsers()\r\n    }, [])\r\n\r\n\r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join', {id, name, room}, ()=>{\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection', {id, name, room}, ()=>{\r\n            })\r\n            socket.off()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('message', ({message}) => {\r\n\r\n            if(message.user === \"\") {  //user joined or left\r\n                getListUsers()\r\n            }\r\n            setMessages(messages => [ ...messages, message ])\r\n            executeScroll()\r\n        })\r\n    }, [])\r\n\r\n\r\n    async function getListUsers(){\r\n        const users = await getUsers(room.id) \r\n        setUsersRoom(users) \r\n    }\r\n\r\n    async function getMoreMessages(){\r\n       const messagesHistory = await getMessges(room.id, skip) \r\n        setMessages([...messages, ...messagesHistory]) \r\n    }\r\n\r\n    function sendMessage(){\r\n        if(message){\r\n            socket.emit('sendMessage', {name, room, message}, ()=>{\r\n            })\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">Chat Room</h4>\r\n                </div>\r\n\r\n\r\n                <div className=\"chat-body\">\r\n\r\n                    <div className=\"chat-side-bar\">\r\n                        <div className=\"name-room\">\r\n                            <BiMessageDetail size={25} className=\"icon-msg\"/> <h6>Room Name :</h6>\r\n                        </div>\r\n\r\n                        <div className=\"header-room\">\r\n                            <h4 className=\"text-center\">{room.roomName}</h4>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"name-room mb-2\">\r\n                                <FaUsers size={25} className=\"icon-msg\"/>\r\n                                 <h6>Users :</h6>\r\n                            </div>\r\n                            <div className=\"users-room\">\r\n                                {usersRoom.map((user, index)=> <p key = {index}>{user.userName}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"chat-message-textArea\">\r\n                        <div className=\"chat-messages\" onScroll={(e)=>handleScroll(e)}>\r\n                            {messages.map((message, index)=>{\r\n                                return  <div key={index} className={`chat-out ${message.user === name ? \"left\" : \"right\" }`}> \r\n                                            <span className={`chat-rectangle ${message.user === name ? \"my-color\" : \"other-color\" }`}>\r\n                                                {message.user&&<p className=\"chat-rectangle-name-date\"> <span>{message.user}</span> <span>{date(message.date)}</span></p>}\r\n                                                <p className=\"chat-rectangle-message\">{message.text} </p>\r\n                                            </span>\r\n                                        </div> \r\n                            })}\r\n                            <span ref = {myRef}></span>\r\n                        </div>\r\n\r\n                        <div className=\"textarea-message\">\r\n                            <textarea className=\"textArea\" rows=\"2\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n                            <button className=\"btn-message\" variant=\"primary\" onClick = {sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Room"]},"metadata":{},"sourceType":"module"}