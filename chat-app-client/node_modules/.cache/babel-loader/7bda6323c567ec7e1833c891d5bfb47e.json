{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { validation, email, password } from \"../Utils/validation\";\nimport { loginUser } from \"../DAL/authenticationApi\";\nimport { AuthContext } from \"../Components/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ctx = useContext(AuthContext);\n\n  const login = () => {\n    dispatch({\n      type: \"LOGIN\"\n    });\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [loginInputDetails, setLoginInputDetails] = useState({\n    email: { ...email,\n      inValid: false,\n      value: \"\",\n      error: []\n    },\n    password\n  });\n\n  async function submit(e) {\n    e.preventDefault();\n    let isValid = true;\n    let user = {};\n\n    for (const key in loginInputDetails) {\n      user[key] = loginInputDetails[key].value;\n      setLoginInputDetails(validation({\n        value: loginInputDetails[key].value,\n        name: key\n      }, loginInputDetails, \"login\"));\n\n      if (loginInputDetails[key].errors.length !== 0) {\n        isValid = false;\n      }\n    }\n\n    if (isValid) {\n      const response = await loginUser(user);\n      const {\n        accessToken,\n        message\n      } = await response.json();\n      setMessage(message);\n\n      if (response.ok) {\n        setTimeout(() => {\n          ctx.refreshToken(accessToken);\n          login();\n          history.push(\"/rooms\");\n        }, 2000);\n      } else {\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 5000);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-base mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-base\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mt-3 mb-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 11,\n            md: 8,\n            lg: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"input-base\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                name: \"email\",\n                isInvalid: loginInputDetails[\"email\"].inValid,\n                placeholder: \"Email\",\n                onBlur: e => {\n                  setLoginInputDetails(validation(e.target, loginInputDetails, \"login\"));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), loginInputDetails[\"email\"].errors.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  className: \"feedback\",\n                  type: \"invalid\",\n                  children: [\" \", value, \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"input-base\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                isInvalid: loginInputDetails[\"password\"].inValid,\n                placeholder: \"Password\",\n                onBlur: e => {\n                  setLoginInputDetails(validation(e.target, loginInputDetails, \"login\"));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), loginInputDetails[\"password\"].errors.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  className: \"feedback\",\n                  type: \"invalid\",\n                  children: [\" \", value, \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"btn-link-base mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-login\",\n                variant: \"dark\",\n                type: \"submit\",\n                onClick: e => {\n                  submit(e);\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-forgot text-center\",\n                to: \"/forgotPassword\",\n                children: \"Forgot Password ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"message-base justify-content-center align-items-center mb-3\",\n            children: message && /*#__PURE__*/_jsxDEV(\"small\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"h0bxxLygF5Le7nK/LKvh+Ct3moI=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Login.js"],"names":["Form","Button","Row","Col","Container","Link","useState","useContext","useHistory","useDispatch","validation","email","password","loginUser","AuthContext","Login","history","dispatch","ctx","login","type","message","setMessage","loginInputDetails","setLoginInputDetails","inValid","value","error","submit","e","preventDefault","isValid","user","key","name","errors","length","response","accessToken","json","ok","setTimeout","refreshToken","push","target","map","index"],"mappings":"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","sourcesContent":["import { Form, Button, Row, Col, Container } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState, useContext } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { validation, email, password } from \"../Utils/validation\"\r\nimport { loginUser } from \"../DAL/authenticationApi\"\r\nimport { AuthContext } from \"../Components/AuthContext\"\r\n\r\nfunction Login() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const ctx = useContext(AuthContext)\r\n\r\n  const login = () => {\r\n    dispatch({ type: \"LOGIN\" })\r\n  }\r\n\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loginInputDetails, setLoginInputDetails] = useState({\r\n    email: {...email, inValid: false, value: \"\", error: [] },\r\n    password,\r\n  })\r\n\r\n\r\n  async function submit(e) {\r\n    e.preventDefault()\r\n\r\n    let isValid = true\r\n    let user = {}\r\n\r\n    for (const key in loginInputDetails) {\r\n      user[key] = loginInputDetails[key].value\r\n      setLoginInputDetails(\r\n        validation(\r\n          { value: loginInputDetails[key].value, name: key },\r\n          loginInputDetails,\r\n          \"login\"\r\n        )\r\n      )\r\n      if (loginInputDetails[key].errors.length !== 0) {\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      const response = await loginUser(user)\r\n      const { accessToken, message } = await response.json()\r\n      setMessage(message)\r\n\r\n      if (response.ok) {\r\n        setTimeout(() => {\r\n          ctx.refreshToken(accessToken)\r\n          login()\r\n          history.push(\"/rooms\")\r\n        }, 2000)\r\n      } else {\r\n        setTimeout(() => {\r\n          setMessage(\"\")\r\n        }, 5000)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"container-base mt-4\">\r\n        <Form className=\"form-base\">\r\n          <h1 className=\"text-center mt-3 mb-4\">Login</h1>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={11} md={8} lg={6}>\r\n              <Form.Group className=\"input-base\">\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  isInvalid={loginInputDetails[\"email\"].inValid}\r\n                  placeholder=\"Email\"\r\n                  onBlur={(e) => {\r\n                    setLoginInputDetails(\r\n                      validation(e.target, loginInputDetails, \"login\")\r\n                    )\r\n                  }}\r\n                />\r\n                {loginInputDetails[\"email\"].errors.map((value, index) => {\r\n                  return (\r\n                    <Form.Control.Feedback\r\n                      className=\"feedback\"\r\n                      key={index}\r\n                      type=\"invalid\"\r\n                    >\r\n                      {\" \"}\r\n                      {value}{\" \"}\r\n                    </Form.Control.Feedback>\r\n                  )\r\n                })}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"input-base\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  isInvalid={loginInputDetails[\"password\"].inValid}\r\n                  placeholder=\"Password\"\r\n                  onBlur={(e) => {\r\n                    setLoginInputDetails(\r\n                      validation(e.target, loginInputDetails, \"login\")\r\n                    )\r\n                  }}\r\n                />\r\n                {loginInputDetails[\"password\"].errors.map((value, index) => {\r\n                  return (\r\n                    <Form.Control.Feedback\r\n                      className=\"feedback\"\r\n                      key={index}\r\n                      type=\"invalid\"\r\n                    >\r\n                      {\" \"}\r\n                      {value}{\" \"}\r\n                    </Form.Control.Feedback>\r\n                  )\r\n                })}\r\n              </Form.Group>\r\n\r\n              <Row className=\"btn-link-base mb-3\">\r\n                <Button\r\n                  className=\"btn-login\"\r\n                  variant=\"dark\"\r\n                  type=\"submit\"\r\n                  onClick={(e) => {\r\n                    submit(e)\r\n                  }}\r\n                >\r\n                  Login\r\n                </Button>\r\n                <Link className=\"link-forgot text-center\" to=\"/forgotPassword\">\r\n                  Forgot Password ?\r\n                </Link>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Row className=\"message-base justify-content-center align-items-center mb-3\">\r\n              {message && <small>{message}</small>}\r\n            </Row>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}