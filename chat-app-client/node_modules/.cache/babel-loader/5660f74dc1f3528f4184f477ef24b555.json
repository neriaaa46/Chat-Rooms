{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/\\u05E0\\u05E8\\u05D9\\u05D4/Desktop/chat rooms/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{inMemoryToken}from\"../Components/AuthContext\";var baseUrl=\"http://localhost:3100/api\";function register(_x){return _register.apply(this,arguments);}function _register(){_register=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(baseUrl,\"/users/register\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)});case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);}));return _register.apply(this,arguments);}function loginUser(_x2){return _loginUser.apply(this,arguments);}function _loginUser(){_loginUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(baseUrl,\"/users/login\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)});case 2:response=_context2.sent;return _context2.abrupt(\"return\",response);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _loginUser.apply(this,arguments);}function updateTokens(_x3){return _updateTokens.apply(this,arguments);}function _updateTokens(){_updateTokens=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(inMemoryToken){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(baseUrl,\"/refreshToken\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json','authorization':\"Bearer \".concat(inMemoryToken)}});case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.json());case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _updateTokens.apply(this,arguments);}function logoutUser(){return _logoutUser.apply(this,arguments);}function _logoutUser(){_logoutUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:fetch(\"\".concat(baseUrl,\"/users/logout\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'}});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return _logoutUser.apply(this,arguments);}function sendEmailToResetPassword(_x4){return _sendEmailToResetPassword.apply(this,arguments);}function _sendEmailToResetPassword(){_sendEmailToResetPassword=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(email){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"\".concat(baseUrl,\"/email/resetPassword\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify(email)});case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.json());case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _sendEmailToResetPassword.apply(this,arguments);}function changePassword(_x5){return _changePassword.apply(this,arguments);}function _changePassword(){_changePassword=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(reset){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch(\"\".concat(baseUrl,\"/users/changePassword\"),{method:'PUT',cardentials:'include',headers:{'Content-type':'application/json'},body:JSON.stringify(reset)});case 2:response=_context6.sent;return _context6.abrupt(\"return\",response);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return _changePassword.apply(this,arguments);}export{register,loginUser,updateTokens,logoutUser,sendEmailToResetPassword,changePassword};","map":{"version":3,"sources":["C:/Users/נריה/Desktop/chat rooms/chat-app-client/src/chat/DAL/authenticationApi.js"],"names":["inMemoryToken","baseUrl","register","user","fetch","method","credentials","headers","body","JSON","stringify","response","loginUser","updateTokens","json","logoutUser","sendEmailToResetPassword","email","changePassword","reset","cardentials"],"mappings":"mXAAA,OAASA,aAAT,KAA8B,2BAA9B,CACA,GAAMC,CAAAA,OAAO,CAAG,2BAAhB,C,QAGeC,CAAAA,Q,oIAAf,iBAAwBC,IAAxB,qJAC2BC,CAAAA,KAAK,WAAIH,OAAJ,oBAA8B,CACtDI,MAAM,CAAC,MAD+C,CAEtDC,WAAW,CAAE,SAFyC,CAGtDC,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CAH8C,CAItDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAJgD,CAA9B,CADhC,QACUQ,QADV,+CAOWA,QAPX,wD,mDAUeC,CAAAA,S,wIAAf,kBAAyBT,IAAzB,0JAC2BC,CAAAA,KAAK,WAAIH,OAAJ,iBAA0B,CAClDI,MAAM,CAAE,MAD0C,CAElDC,WAAW,CAAE,SAFqC,CAGlDC,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CAH0C,CAIlDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAJ4C,CAA1B,CADhC,QACUQ,QADV,iDAOWA,QAPX,0D,oDAWeE,CAAAA,Y,iJAAf,kBAA4Bb,aAA5B,0JAC2BI,CAAAA,KAAK,WAAIH,OAAJ,kBAA4B,CACpDI,MAAM,CAAE,MAD4C,CAEpDC,WAAW,CAAE,SAFuC,CAGpDC,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CACC,iCAA2BP,aAA3B,CADD,CAH4C,CAA5B,CADhC,QACUW,QADV,iDAOWA,QAAQ,CAACG,IAAT,EAPX,0D,uDAWeC,CAAAA,U,wIAAf,wIACIX,KAAK,WAAIH,OAAJ,kBAA2B,CAC5BI,MAAM,CAAE,MADoB,CAE5BC,WAAW,CAAE,SAFe,CAG5BC,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CAHoB,CAA3B,CAAL,CADJ,wD,qDASeS,CAAAA,wB,qLAAf,kBAAwCC,KAAxC,0JAC2Bb,CAAAA,KAAK,WAAIH,OAAJ,yBAAmC,CAC3DI,MAAM,CAAE,MADmD,CAE3DC,WAAW,CAAE,SAF8C,CAG3DC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAHkD,CAI3DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeO,KAAf,CAJqD,CAAnC,CADhC,QACUN,QADV,iDAOWA,QAAQ,CAACG,IAAT,EAPX,0D,mEAYeI,CAAAA,c,uJAAf,kBAA8BC,KAA9B,0JAC2Bf,CAAAA,KAAK,WAAIH,OAAJ,0BAAoC,CAC5DI,MAAM,CAAE,KADoD,CAE5De,WAAW,CAAE,SAF+C,CAG5Db,OAAO,CAAC,CAAC,eAAgB,kBAAjB,CAHoD,CAI5DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeS,KAAf,CAJsD,CAApC,CADhC,QACUR,QADV,iDAOWA,QAPX,0D,iDAWA,OAAQT,QAAR,CAAkBU,SAAlB,CAA6BC,YAA7B,CAA2CE,UAA3C,CAAuDC,wBAAvD,CAAiFE,cAAjF","sourcesContent":["import { inMemoryToken } from \"../Components/AuthContext\"\r\nconst baseUrl = \"http://localhost:3100/api\"\r\n\r\n\r\nasync function register(user){\r\n    const response = await fetch(`${baseUrl}/users/register`, {\r\n        method:'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json'}, \r\n        body: JSON.stringify(user)\r\n    })\r\n    return response\r\n}\r\n\r\nasync function loginUser(user){\r\n    const response = await fetch(`${baseUrl}/users/login`,{\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json'}, \r\n        body: JSON.stringify(user)\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nasync function updateTokens(inMemoryToken){\r\n    const response = await fetch(`${baseUrl}/refreshToken`, {\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers:{'Content-Type': 'application/json', \r\n                 'authorization': `Bearer ${inMemoryToken}`}\r\n    })\r\n    return response.json()\r\n}\r\n\r\n\r\nasync function logoutUser(){\r\n    fetch(`${baseUrl}/users/logout`,{\r\n        method: 'POST', \r\n        credentials: 'include', \r\n        headers:{'Content-Type': 'application/json'}\r\n    }) \r\n} \r\n\r\n\r\nasync function sendEmailToResetPassword(email){\r\n    const response = await fetch(`${baseUrl}/email/resetPassword`, {\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers: {'Content-Type': 'application/json'}, \r\n        body: JSON.stringify(email)\r\n    })\r\n    return response.json()\r\n}\r\n\r\n\r\n\r\nasync function changePassword(reset){\r\n    const response = await fetch(`${baseUrl}/users/changePassword`, {\r\n        method: 'PUT', \r\n        cardentials: 'include',\r\n        headers:{'Content-type': 'application/json'},\r\n        body: JSON.stringify(reset)\r\n    })\r\n    return response\r\n}\r\n\r\n\r\nexport {register, loginUser, updateTokens, logoutUser, sendEmailToResetPassword, changePassword}"]},"metadata":{},"sourceType":"module"}