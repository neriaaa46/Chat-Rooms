{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { decodeJwtToken } from \"../Utils/function\";\nimport io from 'socket.io-client';\nimport { Container, Row, Form, Button } from \"react-bootstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Room() {\n  _s();\n\n  const ENDPOINT = \"localhost:3100\";\n  const {\n    state\n  } = useLocation();\n  const {\n    userName\n  } = decodeJwtToken();\n  const [room, setRoom] = useState(state);\n  const [name, setName] = useState(userName);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    console.log(room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnection');\n      socket.off();\n    };\n  }, [ENDPOINT]); // useEffect(() => {\n  //     socket.on('message', ({message}) => {\n  //         if(message.user && message.user === name){\n  //            message.color = \"my-message\" \n  //            message.side = 'left'\n  //         } else {\n  //             message.color = \"other-message\" \n  //             message.side = 'right'\n  //         }\n  //         setMessages(messages => [ ...messages, message ])\n  //     })\n  // }, [])\n  // function sendMessage(){\n  //     if(message){\n  //         socket.emit('sendMessage', {message, room, name}, ()=>{\n  //         })\n  //         setMessage(\"\")\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Room, \"TqWj9DhGu/Lpo4SL62Pkn7UlWTc=\", false, function () {\n  return [useLocation];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Room.js"],"names":["useEffect","useState","useLocation","decodeJwtToken","io","Container","Row","Form","Button","socket","Room","ENDPOINT","state","userName","room","setRoom","name","setName","message","setMessage","messages","setMessages","console","log","emit","off"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,iBAA5C;;;AAEA,IAAIC,MAAJ;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUV,WAAW,EAA3B;AACA,QAAM;AAACW,IAAAA;AAAD,MAAaV,cAAc,EAAjC;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACW,KAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACY,QAAD,CAAhC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVsB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEAL,IAAAA,MAAM,GAAGL,EAAE,CAACO,QAAD,CAAX;AAEAF,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAACR,MAAAA,IAAD;AAAOF,MAAAA;AAAP,KAApB,EAAkC,MAAI,CAErC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACe,IAAP,CAAY,eAAZ;AACAf,MAAAA,MAAM,CAACgB,GAAP;AACH,KAHD;AAKH,GAfQ,EAeN,CAACd,QAAD,CAfM,CAAT,CAZW,CA8BX;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,sBAAO,qCAAP;AAkCH;;GA5FQD,I;UAGWR,W;;;KAHXQ,I;AA8FT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport {decodeJwtToken} from \"../Utils/function\"\r\nimport io from 'socket.io-client'\r\nimport { Container, Row, Form, Button} from \"react-bootstrap\"\r\n\r\nlet socket\r\n\r\nfunction Room(){\r\n\r\n    const ENDPOINT = \"localhost:3100\"\r\n    const {state} = useLocation()\r\n    const {userName} = decodeJwtToken()\r\n\r\n    const [room, setRoom] = useState(state)\r\n    const [name, setName] = useState(userName)\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(room)\r\n\r\n        socket = io(ENDPOINT)\r\n\r\n        socket.emit('join', {name, room}, ()=>{\r\n\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('disconnection')\r\n            socket.off()\r\n        }\r\n\r\n    }, [ENDPOINT])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     socket.on('message', ({message}) => {\r\n\r\n    //         if(message.user && message.user === name){\r\n    //            message.color = \"my-message\" \r\n    //            message.side = 'left'\r\n\r\n    //         } else {\r\n    //             message.color = \"other-message\" \r\n    //             message.side = 'right'\r\n    //         }\r\n           \r\n    //         setMessages(messages => [ ...messages, message ])\r\n    //     })\r\n        \r\n    // }, [])\r\n\r\n\r\n    // function sendMessage(){\r\n    //     if(message){\r\n    //         socket.emit('sendMessage', {message, room, name}, ()=>{\r\n\r\n    //         })\r\n    //         setMessage(\"\")\r\n    //     }\r\n    // }\r\n\r\n\r\n    return <>\r\n        {/* <Container>\r\n            <Row className=\"justify-content-center mt-4\">\r\n                <div className=\"chat-header\">\r\n                    <h4 className=\"text-center mt-2\">{room}</h4>\r\n                </div>\r\n\r\n                <div className=\"chat-body\">\r\n                    {messages.map((message, index)=>{\r\n                        return  <div key={index} className={`chat-out ${message.side}`}> \r\n                                    <span className={`chat-rectangle ${message.color}`}>\r\n                                        {message.user&&<p className=\"chat-rectangle-name\">{message.user} </p>}\r\n                                        <p className=\"chat-rectangle-message\">{message.text} </p>\r\n                                    </span>\r\n                                </div>\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"chat-footer\">\r\n                    <p>Admin : {room?.admin.name}</p>\r\n                </div>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-center\">\r\n                <Form.Group className=\"mb-3 mt-4 textarea-message\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Control as=\"textarea\" value={message} rows={3} onChange={(e)=>setMessage(e.target.value)} />\r\n                </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"justify-content-center\">\r\n               <Button className=\"btn-message\" variant=\"dark\" onClick = {sendMessage}>Send</Button>\r\n            </Row>\r\n        </Container> */}\r\n    </>\r\n}\r\n\r\nexport default Room"]},"metadata":{},"sourceType":"module"}