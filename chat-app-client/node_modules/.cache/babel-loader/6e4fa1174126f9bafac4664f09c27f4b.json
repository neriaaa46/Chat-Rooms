{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05E8\\u05D9\\u05D4\\\\Desktop\\\\web-socket-app\\\\chat-app-client\\\\src\\\\chat\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { validation, email, password } from \"../Utils/validation\";\nimport { loginUser } from \"../DAL/authenticationApi\";\nimport { AuthContext } from \"../Components/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  useEffect(() => {\n    email.value = \"\";\n    email.errors = [];\n    email.inValid = false;\n  }, []);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ctx = useContext(AuthContext);\n\n  const login = () => {\n    dispatch({\n      type: 'LOGIN'\n    });\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [loginInputDetails, setLoginInputDetails] = useState({\n    email,\n    password\n  });\n\n  async function submit(e) {\n    e.preventDefault();\n    let isValid = true;\n    let user = {};\n\n    for (const key in loginInputDetails) {\n      user[key] = loginInputDetails[key].value;\n      setLoginInputDetails(validation({\n        value: loginInputDetails[key].value,\n        name: key\n      }, loginInputDetails, \"login\"));\n\n      if (loginInputDetails[key].errors.length !== 0) {\n        isValid = false;\n      }\n    }\n\n    if (isValid) {\n      const response = await loginUser(user);\n      const {\n        accessToken,\n        message\n      } = await response.json();\n      setMessage(message);\n\n      if (response.ok) {\n        setTimeout(() => {\n          ctx.refreshToken(accessToken);\n          login();\n          history.push('/rooms');\n        }, 2000);\n      } else {\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 5000);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-base mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-base\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mt-3 mb-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 11,\n            md: 8,\n            lg: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"input-base\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                name: \"email\",\n                isInvalid: loginInputDetails[\"email\"].inValid,\n                placeholder: \"Email\",\n                onBlur: e => {\n                  setLoginInputDetails(validation(e.target, loginInputDetails, \"login\"));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), loginInputDetails[\"email\"].errors.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  className: \"feedback\",\n                  type: \"invalid\",\n                  children: [\" \", value, \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"input-base\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                isInvalid: loginInputDetails[\"password\"].inValid,\n                placeholder: \"Password\",\n                onBlur: e => {\n                  setLoginInputDetails(validation(e.target, loginInputDetails, \"login\"));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), loginInputDetails[\"password\"].errors.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  className: \"feedback\",\n                  type: \"invalid\",\n                  children: [\" \", value, \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"btn-link-base mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-login\",\n                variant: \"dark\",\n                type: \"submit\",\n                onClick: e => {\n                  submit(e);\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-forgot text-center\",\n                to: \"/forgotPassword\",\n                children: \"Forgot Password ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"message-base justify-content-center align-items-center mb-3\",\n            children: message && /*#__PURE__*/_jsxDEV(\"small\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"bOTZVy2MrYZ2vSWLPQ6tYJ3ikt8=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/נריה/Desktop/web-socket-app/chat-app-client/src/chat/Components/Login.js"],"names":["Form","Button","Row","Col","Container","Link","useState","useContext","useEffect","useHistory","useDispatch","validation","email","password","loginUser","AuthContext","Login","value","errors","inValid","history","dispatch","ctx","login","type","message","setMessage","loginInputDetails","setLoginInputDetails","submit","e","preventDefault","isValid","user","key","name","length","response","accessToken","json","ok","setTimeout","refreshToken","push","target","map","index"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,SAAhC,QAAgD,iBAAhD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,EAAoBC,KAApB,EAA2BC,QAA3B,QAA0C,qBAA1C;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;;;AAGA,SAASC,KAAT,GAAgB;AAAA;;AAEZR,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;AACAL,IAAAA,KAAK,CAACM,MAAN,GAAe,EAAf;AACAN,IAAAA,KAAK,CAACO,OAAN,GAAgB,KAAhB;AACH,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,GAAG,GAAGf,UAAU,CAACQ,WAAD,CAAtB;;AAEA,QAAMQ,KAAK,GAAG,MAAM;AAChBF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,iBAAD,EAAoBC,oBAApB,IAA4CtB,QAAQ,CAAC;AACvDM,IAAAA,KADuD;AAEvDC,IAAAA;AAFuD,GAAD,CAA1D;;AAMI,iBAAegB,MAAf,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,IAAI,GAAG,EAAX;;AAED,SAAK,MAAMC,GAAX,IAAkBP,iBAAlB,EAAqC;AAEhCM,MAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYP,iBAAiB,CAACO,GAAD,CAAjB,CAAuBjB,KAAnC;AACAW,MAAAA,oBAAoB,CAACjB,UAAU,CAAC;AAACM,QAAAA,KAAK,EAACU,iBAAiB,CAACO,GAAD,CAAjB,CAAuBjB,KAA9B;AAAoCkB,QAAAA,IAAI,EAACD;AAAzC,OAAD,EAA+CP,iBAA/C,EAAkE,OAAlE,CAAX,CAApB;;AACA,UAAIA,iBAAiB,CAACO,GAAD,CAAjB,CAAuBhB,MAAvB,CAA8BkB,MAA9B,KAAwC,CAA5C,EAA8C;AAC1CJ,QAAAA,OAAO,GAAG,KAAV;AACH;AACJ;;AAED,QAAGA,OAAH,EAAW;AACP,YAAMK,QAAQ,GAAG,MAAMvB,SAAS,CAACmB,IAAD,CAAhC;AACA,YAAM;AAACK,QAAAA,WAAD;AAAcb,QAAAA;AAAd,UAAyB,MAAMY,QAAQ,CAACE,IAAT,EAArC;AACAb,MAAAA,UAAU,CAACD,OAAD,CAAV;;AAEA,UAAGY,QAAQ,CAACG,EAAZ,EAAe;AACXC,QAAAA,UAAU,CAAC,MAAI;AACXnB,UAAAA,GAAG,CAACoB,YAAJ,CAAiBJ,WAAjB;AACAf,UAAAA,KAAK;AACLH,UAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACH,SAJS,EAIP,IAJO,CAAV;AAMH,OAPD,MAOO;AACHF,QAAAA,UAAU,CAAC,MAAI;AACXf,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AACJ;;AAGL,sBAAO;AAAA,2BACH,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,qBAArB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,gCAEI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,CAAjB;AAAoB,YAAA,EAAE,EAAE,CAAxB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,YAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,IAAI,EAAC,OAAhC;AAAwC,gBAAA,SAAS,EAAEC,iBAAiB,CAAC,OAAD,CAAjB,CAA2BR,OAA9E;AAAuF,gBAAA,WAAW,EAAC,OAAnG;AACA,gBAAA,MAAM,EAAGW,CAAD,IAAK;AAACF,kBAAAA,oBAAoB,CAACjB,UAAU,CAACmB,CAAC,CAACc,MAAH,EAAUjB,iBAAV,EAA6B,OAA7B,CAAX,CAApB;AAAsE;AADpF;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGKA,iBAAiB,CAAC,OAAD,CAAjB,CAA2BT,MAA3B,CAAkC2B,GAAlC,CAAsC,CAAC5B,KAAD,EAAO6B,KAAP,KACvC;AAAC,oCAAO,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,SAAS,EAAC,UAAjC;AAAwD,kBAAA,IAAI,EAAC,SAA7D;AAAA,kCAAyE7B,KAAzE;AAAA,mBAAiD6B,KAAjD;AAAA;AAAA;AAAA;AAAA,wBAAP;AAAgH,eADhH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,YAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,UAAnB;AAA8B,gBAAA,IAAI,EAAC,UAAnC;AAA8C,gBAAA,SAAS,EAAEnB,iBAAiB,CAAC,UAAD,CAAjB,CAA8BR,OAAvF;AAAgG,gBAAA,WAAW,EAAC,UAA5G;AACA,gBAAA,MAAM,EAAGW,CAAD,IAAK;AAACF,kBAAAA,oBAAoB,CAACjB,UAAU,CAACmB,CAAC,CAACc,MAAH,EAAUjB,iBAAV,EAA6B,OAA7B,CAAX,CAApB;AAAsE;AADpF;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGKA,iBAAiB,CAAC,UAAD,CAAjB,CAA8BT,MAA9B,CAAqC2B,GAArC,CAAyC,CAAC5B,KAAD,EAAO6B,KAAP,KAC1C;AAAC,oCAAO,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,SAAS,EAAC,UAAjC;AAAwD,kBAAA,IAAI,EAAC,SAA7D;AAAA,kCAAyE7B,KAAzE;AAAA,mBAAiD6B,KAAjD;AAAA;AAAA;AAAA;AAAA,wBAAP;AAAgH,eADhH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,WAAlB;AAA8B,gBAAA,OAAO,EAAC,MAAtC;AAA6C,gBAAA,IAAI,EAAC,QAAlD;AAA2D,gBAAA,OAAO,EAAGhB,CAAD,IAAK;AAACD,kBAAAA,MAAM,CAACC,CAAD,CAAN;AAAU,iBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,yBAAhB;AAA0C,gBAAA,EAAE,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eA0BI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,6DAAf;AAAA,sBACKL,OAAO,iBAAE;AAAA,wBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,kBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAyCH;;GApGQT,K;UAQWP,U,EACCC,W;;;KATZM,K;AAsGT,eAAeA,KAAf","sourcesContent":["import {Form, Button, Row, Col, Container} from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {useState, useContext, useEffect} from \"react\"\r\nimport {useHistory} from \"react-router\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {validation, email, password} from \"../Utils/validation\"\r\nimport {loginUser} from \"../DAL/authenticationApi\"\r\nimport {AuthContext} from \"../Components/AuthContext\"\r\n\r\n\r\nfunction Login(){\r\n\r\n    useEffect(()=>{\r\n        email.value = \"\"\r\n        email.errors = [] \r\n        email.inValid = false\r\n    },[])\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const ctx = useContext(AuthContext)\r\n\r\n    const login = () => {\r\n        dispatch({type: 'LOGIN'})\r\n    }\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loginInputDetails, setLoginInputDetails] = useState({\r\n        email,\r\n        password,\r\n        })\r\n\r\n\r\n        async function submit(e){\r\n            e.preventDefault()\r\n    \r\n            let isValid = true\r\n            let user = {}\r\n    \r\n           for (const key in loginInputDetails) {\r\n    \r\n                user[key] = loginInputDetails[key].value\r\n                setLoginInputDetails(validation({value:loginInputDetails[key].value,name:key},loginInputDetails, \"login\"))\r\n                if (loginInputDetails[key].errors.length !==0){\r\n                    isValid = false\r\n                }\r\n            }\r\n    \r\n            if(isValid){\r\n                const response = await loginUser(user)\r\n                const {accessToken, message} = await response.json()\r\n                setMessage(message)\r\n\r\n                if(response.ok){\r\n                    setTimeout(()=>{\r\n                        ctx.refreshToken(accessToken)\r\n                        login()\r\n                        history.push('/rooms')\r\n                    }, 2000)\r\n                    \r\n                } else {\r\n                    setTimeout(()=>{\r\n                        setMessage(\"\")\r\n                    }, 5000)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    return <>\r\n        <Container className=\"container-base mt-4\">\r\n            <Form className=\"form-base\"> \r\n                \r\n                <h1 className=\"text-center mt-3 mb-4\">Login</h1>\r\n                <Row className=\"justify-content-center\">\r\n\r\n                    <Col xs={11} md={8} lg={6}>\r\n                        <Form.Group className=\"input-base\">\r\n                            <Form.Control type=\"email\" name=\"email\" isInvalid={loginInputDetails[\"email\"].inValid} placeholder=\"Email\"\r\n                            onBlur={(e)=>{setLoginInputDetails(validation(e.target,loginInputDetails, \"login\"))}}/>\r\n                            {loginInputDetails[\"email\"].errors.map((value,index)=>\r\n                            {return <Form.Control.Feedback className=\"feedback\" key={index} type=\"invalid\"> {value} </Form.Control.Feedback>})}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"input-base\">\r\n                            <Form.Control type=\"password\" name=\"password\" isInvalid={loginInputDetails[\"password\"].inValid} placeholder=\"Password\"\r\n                            onBlur={(e)=>{setLoginInputDetails(validation(e.target,loginInputDetails, \"login\"))}}/>\r\n                            {loginInputDetails[\"password\"].errors.map((value,index)=>\r\n                            {return <Form.Control.Feedback className=\"feedback\" key={index} type=\"invalid\"> {value} </Form.Control.Feedback>})}\r\n                        </Form.Group>\r\n\r\n                        <Row className=\"btn-link-base mb-3\">\r\n                            <Button className=\"btn-login\" variant=\"dark\" type=\"submit\" onClick={(e)=>{submit(e)}}>\r\n                                Login\r\n                            </Button> \r\n                            <Link className=\"link-forgot text-center\" to=\"/forgotPassword\">Forgot Password ?</Link>\r\n                        </Row>\r\n                       \r\n                    </Col>\r\n\r\n                    <Row className=\"message-base justify-content-center align-items-center mb-3\">\r\n                        {message&&<small>{message}</small>}\r\n                    </Row>\r\n\r\n                </Row>\r\n                \r\n            </Form>\r\n        </Container>\r\n        \r\n    </>\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}